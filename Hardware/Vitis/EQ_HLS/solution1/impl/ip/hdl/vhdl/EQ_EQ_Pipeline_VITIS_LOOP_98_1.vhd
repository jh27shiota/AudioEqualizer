-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EQ_EQ_Pipeline_VITIS_LOOP_98_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_lshr_f6_cast : IN STD_LOGIC_VECTOR (9 downto 0);
    buf_re_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_re_V_ce0 : OUT STD_LOGIC;
    buf_re_V_we0 : OUT STD_LOGIC;
    buf_re_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
    buf_re_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
    buf_im_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_im_V_ce0 : OUT STD_LOGIC;
    buf_im_V_we0 : OUT STD_LOGIC;
    buf_im_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
    buf_im_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
    trunc_ln10 : IN STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of EQ_EQ_Pipeline_VITIS_LOOP_98_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_11 : STD_LOGIC_VECTOR (9 downto 0) := "0000010001";
    constant ap_const_lv10_2B : STD_LOGIC_VECTOR (9 downto 0) := "0000101011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv40_1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln98_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal i_5_reg_346 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln98_reg_352 : STD_LOGIC_VECTOR (0 downto 0);
    signal mode_fu_256_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal mode_reg_356 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_re_V_addr_2_reg_360 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_V_addr_2_reg_365 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_V_addr_gep_fu_92_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_V_addr_reg_370 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_V_addr_gep_fu_100_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_V_addr_reg_375 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_V_addr_3_reg_380 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal buf_im_V_addr_3_reg_385 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_V_addr_1_reg_390 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_V_addr_1_reg_395 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln98_fu_178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1534_fu_288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1500_fu_294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_50 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln98_fu_324_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_5 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal sext_ln1534_fu_264_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_fu_274_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1534_2_fu_300_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_23_fu_310_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1534_1_fu_269_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_22_fu_281_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln1534_3_fu_305_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_24_fu_317_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal icmp_ln108_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln104_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln112_fu_228_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln116_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_1_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln112_1_fu_242_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_140_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_150_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_160_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component EQ_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component EQ_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_50_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
                i_fu_50 <= ap_const_lv10_1;
            elsif (((icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_fu_50 <= add_ln98_fu_324_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                buf_im_V_addr_1_reg_395 <= zext_ln1500_fu_294_p1(10 - 1 downto 0);
                buf_re_V_addr_1_reg_390 <= zext_ln1500_fu_294_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mode_fu_256_p3 = ap_const_lv3_7) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                buf_im_V_addr_2_reg_365 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
                buf_re_V_addr_2_reg_360 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                buf_im_V_addr_3_reg_385 <= zext_ln1534_fu_288_p1(10 - 1 downto 0);
                buf_re_V_addr_3_reg_380 <= zext_ln1534_fu_288_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mode_fu_256_p3 = ap_const_lv3_2) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                buf_im_V_addr_reg_375 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
                buf_re_V_addr_reg_370 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                i_5_reg_346 <= ap_sig_allocacmp_i_5;
                icmp_ln98_reg_352 <= icmp_ln98_fu_172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                mode_reg_356 <= mode_fu_256_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln98_fu_172_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln98_fu_324_p2 <= std_logic_vector(unsigned(i_5_reg_346) + unsigned(ap_const_lv10_1));
    and_ln108_fu_210_p2 <= (icmp_ln108_fu_186_p2 and icmp_ln104_fu_204_p2);
    and_ln112_fu_222_p2 <= (xor_ln108_fu_216_p2 and icmp_ln112_fu_192_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_start_int)
    begin
        if (((icmp_ln98_fu_172_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_5_assign_proc : process(ap_CS_fsm_state1, i_fu_50, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_5 <= ap_const_lv10_1;
        else 
            ap_sig_allocacmp_i_5 <= i_fu_50;
        end if; 
    end process;

    buf_im_V_addr_gep_fu_100_p3 <= zext_ln98_fu_178_p1(10 - 1 downto 0);

    buf_im_V_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_CS_fsm_state4, icmp_ln98_reg_352, mode_fu_256_p3, mode_reg_356, buf_im_V_addr_2_reg_365, buf_im_V_addr_gep_fu_100_p3, buf_im_V_addr_reg_375, ap_CS_fsm_state3, buf_im_V_addr_3_reg_385, buf_im_V_addr_1_reg_395, zext_ln98_fu_178_p1, zext_ln1534_fu_288_p1, zext_ln1500_fu_294_p1, ap_CS_fsm_state2)
    begin
        if (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buf_im_V_address0 <= buf_im_V_addr_1_reg_395;
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buf_im_V_address0 <= buf_im_V_addr_3_reg_385;
        elsif (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buf_im_V_address0 <= zext_ln1500_fu_294_p1(10 - 1 downto 0);
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buf_im_V_address0 <= zext_ln1534_fu_288_p1(10 - 1 downto 0);
        elsif (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_im_V_address0 <= buf_im_V_addr_reg_375;
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_im_V_address0 <= buf_im_V_addr_2_reg_365;
        elsif (((mode_fu_256_p3 = ap_const_lv3_2) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buf_im_V_address0 <= buf_im_V_addr_gep_fu_100_p3;
        elsif (((mode_fu_256_p3 = ap_const_lv3_7) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buf_im_V_address0 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
        else 
            buf_im_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_im_V_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_CS_fsm_state4, icmp_ln98_reg_352, mode_fu_256_p3, mode_reg_356, ap_CS_fsm_state3, ap_CS_fsm_state2, ap_start_int)
    begin
        if ((((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((mode_fu_256_p3 = ap_const_lv3_2) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((mode_fu_256_p3 = ap_const_lv3_7) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buf_im_V_ce0 <= ap_const_logic_1;
        else 
            buf_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_V_d0_assign_proc : process(ap_CS_fsm_state4, icmp_ln98_reg_352, mode_reg_356, ap_CS_fsm_state2, sext_ln1534_1_fu_269_p1, r_V_22_fu_281_p2, sext_ln1534_3_fu_305_p1, r_V_24_fu_317_p2)
    begin
        if ((icmp_ln98_reg_352 = ap_const_lv1_1)) then
            if (((mode_reg_356 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                buf_im_V_d0 <= r_V_24_fu_317_p2;
            elsif (((mode_reg_356 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                buf_im_V_d0 <= sext_ln1534_3_fu_305_p1;
            elsif (((mode_reg_356 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buf_im_V_d0 <= r_V_22_fu_281_p2;
            elsif (((mode_reg_356 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buf_im_V_d0 <= sext_ln1534_1_fu_269_p1;
            else 
                buf_im_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_im_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_im_V_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln98_reg_352, mode_reg_356, ap_CS_fsm_state2)
    begin
        if ((((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buf_im_V_we0 <= ap_const_logic_1;
        else 
            buf_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_re_V_addr_gep_fu_92_p3 <= zext_ln98_fu_178_p1(10 - 1 downto 0);

    buf_re_V_address0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_CS_fsm_state4, icmp_ln98_reg_352, mode_fu_256_p3, mode_reg_356, buf_re_V_addr_2_reg_360, buf_re_V_addr_gep_fu_92_p3, buf_re_V_addr_reg_370, buf_re_V_addr_3_reg_380, ap_CS_fsm_state3, buf_re_V_addr_1_reg_390, zext_ln98_fu_178_p1, zext_ln1534_fu_288_p1, zext_ln1500_fu_294_p1, ap_CS_fsm_state2)
    begin
        if (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buf_re_V_address0 <= buf_re_V_addr_1_reg_390;
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            buf_re_V_address0 <= buf_re_V_addr_3_reg_380;
        elsif (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buf_re_V_address0 <= zext_ln1500_fu_294_p1(10 - 1 downto 0);
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buf_re_V_address0 <= zext_ln1534_fu_288_p1(10 - 1 downto 0);
        elsif (((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_re_V_address0 <= buf_re_V_addr_reg_370;
        elsif (((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_re_V_address0 <= buf_re_V_addr_2_reg_360;
        elsif (((mode_fu_256_p3 = ap_const_lv3_2) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buf_re_V_address0 <= buf_re_V_addr_gep_fu_92_p3;
        elsif (((mode_fu_256_p3 = ap_const_lv3_7) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            buf_re_V_address0 <= zext_ln98_fu_178_p1(10 - 1 downto 0);
        else 
            buf_re_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_re_V_ce0_assign_proc : process(ap_CS_fsm_state1, icmp_ln98_fu_172_p2, ap_CS_fsm_state4, icmp_ln98_reg_352, mode_fu_256_p3, mode_reg_356, ap_CS_fsm_state3, ap_CS_fsm_state2, ap_start_int)
    begin
        if ((((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((mode_fu_256_p3 = ap_const_lv3_2) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((mode_fu_256_p3 = ap_const_lv3_7) and (icmp_ln98_fu_172_p2 = ap_const_lv1_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buf_re_V_ce0 <= ap_const_logic_1;
        else 
            buf_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_V_d0_assign_proc : process(ap_CS_fsm_state4, icmp_ln98_reg_352, mode_reg_356, ap_CS_fsm_state2, sext_ln1534_fu_264_p1, r_V_fu_274_p2, sext_ln1534_2_fu_300_p1, r_V_23_fu_310_p2)
    begin
        if ((icmp_ln98_reg_352 = ap_const_lv1_1)) then
            if (((mode_reg_356 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                buf_re_V_d0 <= r_V_23_fu_310_p2;
            elsif (((mode_reg_356 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                buf_re_V_d0 <= sext_ln1534_2_fu_300_p1;
            elsif (((mode_reg_356 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buf_re_V_d0 <= r_V_fu_274_p2;
            elsif (((mode_reg_356 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buf_re_V_d0 <= sext_ln1534_fu_264_p1;
            else 
                buf_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            buf_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_re_V_we0_assign_proc : process(ap_CS_fsm_state4, icmp_ln98_reg_352, mode_reg_356, ap_CS_fsm_state2)
    begin
        if ((((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_7) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((mode_reg_356 = ap_const_lv3_2) and (icmp_ln98_reg_352 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buf_re_V_we0 <= ap_const_logic_1;
        else 
            buf_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_140_p4 <= buf_re_V_q0(39 downto 1);
    grp_fu_150_p4 <= buf_im_V_q0(39 downto 1);
    grp_fu_160_p2 <= std_logic_vector(unsigned(trunc_ln10) - unsigned(i_5_reg_346));
    icmp_ln104_fu_204_p2 <= "0" when (ap_sig_allocacmp_i_5 = ap_const_lv10_1) else "1";
    icmp_ln108_fu_186_p2 <= "1" when (unsigned(ap_sig_allocacmp_i_5) < unsigned(ap_const_lv10_5)) else "0";
    icmp_ln112_fu_192_p2 <= "1" when (unsigned(ap_sig_allocacmp_i_5) < unsigned(ap_const_lv10_11)) else "0";
    icmp_ln116_fu_198_p2 <= "1" when (unsigned(ap_sig_allocacmp_i_5) < unsigned(ap_const_lv10_2B)) else "0";
    icmp_ln98_fu_172_p2 <= "1" when (unsigned(ap_sig_allocacmp_i_5) < unsigned(p_lshr_f6_cast)) else "0";
    mode_fu_256_p3 <= 
        select_ln112_1_fu_242_p3 when (or_ln112_1_fu_250_p2(0) = '1') else 
        ap_const_lv3_7;
    or_ln112_1_fu_250_p2 <= (or_ln112_fu_236_p2 or icmp_ln116_fu_198_p2);
    or_ln112_fu_236_p2 <= (and_ln112_fu_222_p2 or and_ln108_fu_210_p2);
    r_V_22_fu_281_p2 <= std_logic_vector(shift_left(unsigned(buf_im_V_q0),to_integer(unsigned('0' & ap_const_lv40_1(31-1 downto 0)))));
    r_V_23_fu_310_p2 <= std_logic_vector(shift_left(unsigned(buf_re_V_q0),to_integer(unsigned('0' & ap_const_lv40_1(31-1 downto 0)))));
    r_V_24_fu_317_p2 <= std_logic_vector(shift_left(unsigned(buf_im_V_q0),to_integer(unsigned('0' & ap_const_lv40_1(31-1 downto 0)))));
    r_V_fu_274_p2 <= std_logic_vector(shift_left(unsigned(buf_re_V_q0),to_integer(unsigned('0' & ap_const_lv40_1(31-1 downto 0)))));
    select_ln112_1_fu_242_p3 <= 
        select_ln112_fu_228_p3 when (or_ln112_fu_236_p2(0) = '1') else 
        ap_const_lv3_2;
    select_ln112_fu_228_p3 <= 
        ap_const_lv3_1 when (and_ln112_fu_222_p2(0) = '1') else 
        ap_const_lv3_7;
        sext_ln1534_1_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_150_p4),40));

        sext_ln1534_2_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_140_p4),40));

        sext_ln1534_3_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_150_p4),40));

        sext_ln1534_fu_264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_140_p4),40));

    xor_ln108_fu_216_p2 <= (icmp_ln108_fu_186_p2 xor ap_const_lv1_1);
    zext_ln1500_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_160_p2),64));
    zext_ln1534_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_160_p2),64));
    zext_ln98_fu_178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_5),64));
end behav;
