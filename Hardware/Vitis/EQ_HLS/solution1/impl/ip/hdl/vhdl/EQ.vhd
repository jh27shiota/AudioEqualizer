-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EQ is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    in_stream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    in_stream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of EQ is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "EQ_EQ,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.075000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=25542,HLS_SYN_LUT=24058,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal sample_rate : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f6_cast_reg_268 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln98_fu_244_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln98_reg_274 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_fu_253_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_reg_279 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal buf_re_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_V_ce0 : STD_LOGIC;
    signal buf_re_V_we0 : STD_LOGIC;
    signal buf_re_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal buf_re_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal buf_re_V_ce1 : STD_LOGIC;
    signal buf_re_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal buf_im_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_V_ce0 : STD_LOGIC;
    signal buf_im_V_we0 : STD_LOGIC;
    signal buf_im_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal buf_im_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal buf_im_V_ce1 : STD_LOGIC;
    signal buf_im_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_idle : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_ready : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_in_stream_TREADY : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_ce0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_we0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_ce0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_we0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out_ap_vld : STD_LOGIC;
    signal grp_fft_fu_175_ap_start : STD_LOGIC;
    signal grp_fft_fu_175_ap_done : STD_LOGIC;
    signal grp_fft_fu_175_ap_idle : STD_LOGIC;
    signal grp_fft_fu_175_ap_ready : STD_LOGIC;
    signal grp_fft_fu_175_buf_re_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_175_buf_re_ce0 : STD_LOGIC;
    signal grp_fft_fu_175_buf_re_we0 : STD_LOGIC;
    signal grp_fft_fu_175_buf_re_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_175_buf_re_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_175_buf_re_ce1 : STD_LOGIC;
    signal grp_fft_fu_175_buf_im_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_175_buf_im_ce0 : STD_LOGIC;
    signal grp_fft_fu_175_buf_im_we0 : STD_LOGIC;
    signal grp_fft_fu_175_buf_im_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_fu_175_buf_im_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_fu_175_buf_im_ce1 : STD_LOGIC;
    signal grp_fft_fu_175_inverse_offset : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_idle : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_ready : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_ce0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_we0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_ce0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_we0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_idle : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_ready : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TREADY : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_ce0 : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID : STD_LOGIC;
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TUSER : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TID : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDEST : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fft_fu_175_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln98_fu_248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal in_stream_TVALID_int_regslice : STD_LOGIC;
    signal in_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TUSER_int_regslice : STD_LOGIC_VECTOR (1 downto 0);
    signal regslice_both_in_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_user_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_id_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TID_int_regslice : STD_LOGIC_VECTOR (4 downto 0);
    signal regslice_both_in_stream_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_id_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDEST_int_regslice : STD_LOGIC_VECTOR (5 downto 0);
    signal regslice_both_in_stream_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_dest_V_U_ack_in : STD_LOGIC;
    signal out_stream_TVALID_int_regslice : STD_LOGIC;
    signal out_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_user_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_id_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component EQ_EQ_Pipeline_VITIS_LOOP_165_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_stream_TVALID : IN STD_LOGIC;
        in_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        in_stream_TREADY : OUT STD_LOGIC;
        in_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        in_stream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
        in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_stream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
        in_stream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
        buf_re_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_V_ce0 : OUT STD_LOGIC;
        buf_re_V_we0 : OUT STD_LOGIC;
        buf_re_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_im_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_V_ce0 : OUT STD_LOGIC;
        buf_im_V_we0 : OUT STD_LOGIC;
        buf_im_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        count_out : OUT STD_LOGIC_VECTOR (10 downto 0);
        count_out_ap_vld : OUT STD_LOGIC );
    end component;


    component EQ_fft IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_re_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_ce0 : OUT STD_LOGIC;
        buf_re_we0 : OUT STD_LOGIC;
        buf_re_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_re_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        buf_re_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_ce1 : OUT STD_LOGIC;
        buf_re_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        buf_im_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_ce0 : OUT STD_LOGIC;
        buf_im_we0 : OUT STD_LOGIC;
        buf_im_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_im_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        buf_im_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_ce1 : OUT STD_LOGIC;
        buf_im_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
        inverse_offset : IN STD_LOGIC );
    end component;


    component EQ_EQ_Pipeline_VITIS_LOOP_98_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_lshr_f6_cast : IN STD_LOGIC_VECTOR (9 downto 0);
        buf_re_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_V_ce0 : OUT STD_LOGIC;
        buf_re_V_we0 : OUT STD_LOGIC;
        buf_re_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_re_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        buf_im_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_V_ce0 : OUT STD_LOGIC;
        buf_im_V_we0 : OUT STD_LOGIC;
        buf_im_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_im_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        trunc_ln10 : IN STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component EQ_EQ_Pipeline_VITIS_LOOP_187_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_stream_TREADY : IN STD_LOGIC;
        count_reload : IN STD_LOGIC_VECTOR (10 downto 0);
        buf_re_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_V_ce0 : OUT STD_LOGIC;
        buf_re_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        sext_ln187 : IN STD_LOGIC_VECTOR (10 downto 0);
        out_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_stream_TVALID : OUT STD_LOGIC;
        out_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_stream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
        out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_stream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
        out_stream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component EQ_buf_re_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component EQ_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        sample_rate : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component EQ_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    buf_re_V_U : component EQ_buf_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 40,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_re_V_address0,
        ce0 => buf_re_V_ce0,
        we0 => buf_re_V_we0,
        d0 => buf_re_V_d0,
        q0 => buf_re_V_q0,
        address1 => grp_fft_fu_175_buf_re_address1,
        ce1 => buf_re_V_ce1,
        q1 => buf_re_V_q1);

    buf_im_V_U : component EQ_buf_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 40,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_im_V_address0,
        ce0 => buf_im_V_ce0,
        we0 => buf_im_V_we0,
        d0 => buf_im_V_d0,
        q0 => buf_im_V_q0,
        address1 => grp_fft_fu_175_buf_im_address1,
        ce1 => buf_im_V_ce1,
        q1 => buf_im_V_q1);

    grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154 : component EQ_EQ_Pipeline_VITIS_LOOP_165_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start,
        ap_done => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done,
        ap_idle => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_idle,
        ap_ready => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_ready,
        in_stream_TVALID => in_stream_TVALID_int_regslice,
        in_stream_TDATA => in_stream_TDATA_int_regslice,
        in_stream_TREADY => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_in_stream_TREADY,
        in_stream_TKEEP => in_stream_TKEEP_int_regslice,
        in_stream_TSTRB => in_stream_TSTRB_int_regslice,
        in_stream_TUSER => in_stream_TUSER_int_regslice,
        in_stream_TLAST => in_stream_TLAST_int_regslice,
        in_stream_TID => in_stream_TID_int_regslice,
        in_stream_TDEST => in_stream_TDEST_int_regslice,
        buf_re_V_address0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_address0,
        buf_re_V_ce0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_ce0,
        buf_re_V_we0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_we0,
        buf_re_V_d0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_d0,
        buf_im_V_address0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_address0,
        buf_im_V_ce0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_ce0,
        buf_im_V_we0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_we0,
        buf_im_V_d0 => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_d0,
        count_out => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out,
        count_out_ap_vld => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out_ap_vld);

    grp_fft_fu_175 : component EQ_fft
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fft_fu_175_ap_start,
        ap_done => grp_fft_fu_175_ap_done,
        ap_idle => grp_fft_fu_175_ap_idle,
        ap_ready => grp_fft_fu_175_ap_ready,
        buf_re_address0 => grp_fft_fu_175_buf_re_address0,
        buf_re_ce0 => grp_fft_fu_175_buf_re_ce0,
        buf_re_we0 => grp_fft_fu_175_buf_re_we0,
        buf_re_d0 => grp_fft_fu_175_buf_re_d0,
        buf_re_q0 => buf_re_V_q0,
        buf_re_address1 => grp_fft_fu_175_buf_re_address1,
        buf_re_ce1 => grp_fft_fu_175_buf_re_ce1,
        buf_re_q1 => buf_re_V_q1,
        buf_im_address0 => grp_fft_fu_175_buf_im_address0,
        buf_im_ce0 => grp_fft_fu_175_buf_im_ce0,
        buf_im_we0 => grp_fft_fu_175_buf_im_we0,
        buf_im_d0 => grp_fft_fu_175_buf_im_d0,
        buf_im_q0 => buf_im_V_q0,
        buf_im_address1 => grp_fft_fu_175_buf_im_address1,
        buf_im_ce1 => grp_fft_fu_175_buf_im_ce1,
        buf_im_q1 => buf_im_V_q1,
        fft_size => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out,
        inverse_offset => grp_fft_fu_175_inverse_offset);

    grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201 : component EQ_EQ_Pipeline_VITIS_LOOP_98_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start,
        ap_done => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done,
        ap_idle => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_idle,
        ap_ready => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_ready,
        p_lshr_f6_cast => p_lshr_f6_cast_reg_268,
        buf_re_V_address0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_address0,
        buf_re_V_ce0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_ce0,
        buf_re_V_we0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_we0,
        buf_re_V_d0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_d0,
        buf_re_V_q0 => buf_re_V_q0,
        buf_im_V_address0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_address0,
        buf_im_V_ce0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_ce0,
        buf_im_V_we0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_we0,
        buf_im_V_d0 => grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_d0,
        buf_im_V_q0 => buf_im_V_q0,
        trunc_ln10 => trunc_ln98_reg_274);

    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209 : component EQ_EQ_Pipeline_VITIS_LOOP_187_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start,
        ap_done => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done,
        ap_idle => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_idle,
        ap_ready => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_ready,
        out_stream_TREADY => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TREADY,
        count_reload => grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out,
        buf_re_V_address0 => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_address0,
        buf_re_V_ce0 => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_ce0,
        buf_re_V_q0 => buf_re_V_q0,
        sext_ln187 => sub_reg_279,
        out_stream_TDATA => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDATA,
        out_stream_TVALID => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        out_stream_TKEEP => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TKEEP,
        out_stream_TSTRB => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TSTRB,
        out_stream_TUSER => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TUSER,
        out_stream_TLAST => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TLAST,
        out_stream_TID => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TID,
        out_stream_TDEST => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDEST);

    CTRL_s_axi_U : component EQ_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        sample_rate => sample_rate,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_in_stream_V_data_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int_regslice,
        vld_out => in_stream_TVALID_int_regslice,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int_regslice,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int_regslice,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_user_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TUSER,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_user_V_U_ack_in,
        data_out => in_stream_TUSER_int_regslice,
        vld_out => regslice_both_in_stream_V_user_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_user_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int_regslice,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_in_stream_V_id_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TID,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_id_V_U_ack_in,
        data_out => in_stream_TID_int_regslice,
        vld_out => regslice_both_in_stream_V_id_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_id_V_U_apdone_blk);

    regslice_both_in_stream_V_dest_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDEST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_dest_V_U_ack_in,
        data_out => in_stream_TDEST_int_regslice,
        vld_out => regslice_both_in_stream_V_dest_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_dest_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDATA,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => out_stream_TREADY_int_regslice,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TKEEP,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TSTRB,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_user_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 2)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TUSER,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_user_V_U_ack_in_dummy,
        data_out => out_stream_TUSER,
        vld_out => regslice_both_out_stream_V_user_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_user_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TLAST,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_id_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 5)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TID,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_id_V_U_ack_in_dummy,
        data_out => out_stream_TID,
        vld_out => regslice_both_out_stream_V_id_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_id_V_U_apdone_blk);

    regslice_both_out_stream_V_dest_V_U : component EQ_regslice_both
    generic map (
        DataWidth => 6)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TDEST,
        vld_in => grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID,
        ack_in => regslice_both_out_stream_V_dest_V_U_ack_in_dummy,
        data_out => out_stream_TDEST,
        vld_out => regslice_both_out_stream_V_dest_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_ready = ap_const_logic_1)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_fu_175_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fft_fu_175_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_fft_fu_175_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_fu_175_ap_ready = ap_const_logic_1)) then 
                    grp_fft_fu_175_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_lshr_f6_cast_reg_268 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out(10 downto 1);
                trunc_ln98_reg_274 <= trunc_ln98_fu_244_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                sub_reg_279 <= sub_fu_253_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done, grp_fft_fu_175_ap_done, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done, grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state14, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_fft_fu_175_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_fft_fu_175_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_fft_fu_175_ap_done)
    begin
        if ((grp_fft_fu_175_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done)
    begin
        if ((grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done)
    begin
        if ((grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_fft_fu_175_ap_done)
    begin
        if ((grp_fft_fu_175_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done)
    begin
        if ((grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state14, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14, regslice_both_out_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    buf_im_V_address0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_address0, grp_fft_fu_175_buf_im_address0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, zext_ln98_fu_248_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_im_V_address0 <= zext_ln98_fu_248_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_im_V_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_im_V_address0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_im_V_address0 <= grp_fft_fu_175_buf_im_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_im_V_address0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_address0;
        else 
            buf_im_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_im_V_ce0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_ce0, grp_fft_fu_175_buf_im_ce0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_im_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_im_V_ce0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_im_V_ce0 <= grp_fft_fu_175_buf_im_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_im_V_ce0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_ce0;
        else 
            buf_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_V_ce1_assign_proc : process(grp_fft_fu_175_buf_im_ce1, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_im_V_ce1 <= grp_fft_fu_175_buf_im_ce1;
        else 
            buf_im_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_V_d0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_d0, grp_fft_fu_175_buf_im_d0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_d0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_im_V_d0 <= ap_const_lv40_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_im_V_d0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_im_V_d0 <= grp_fft_fu_175_buf_im_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_im_V_d0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_d0;
        else 
            buf_im_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_im_V_we0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_we0, grp_fft_fu_175_buf_im_we0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_we0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_im_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_im_V_we0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_im_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_im_V_we0 <= grp_fft_fu_175_buf_im_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_im_V_we0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_im_V_we0;
        else 
            buf_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_V_address0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_address0, grp_fft_fu_175_buf_re_address0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_address0, grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state8, zext_ln98_fu_248_p1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buf_re_V_address0 <= zext_ln98_fu_248_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_re_V_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_re_V_address0 <= grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_re_V_address0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_re_V_address0 <= grp_fft_fu_175_buf_re_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_re_V_address0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_address0;
        else 
            buf_re_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_re_V_ce0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_ce0, grp_fft_fu_175_buf_re_ce0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_ce0, grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state13, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_re_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            buf_re_V_ce0 <= grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_buf_re_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_re_V_ce0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_re_V_ce0 <= grp_fft_fu_175_buf_re_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_re_V_ce0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_ce0;
        else 
            buf_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_V_ce1_assign_proc : process(grp_fft_fu_175_buf_re_ce1, ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_re_V_ce1 <= grp_fft_fu_175_buf_re_ce1;
        else 
            buf_re_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_V_d0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_d0, grp_fft_fu_175_buf_re_d0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_d0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_re_V_d0 <= ap_const_lv40_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_re_V_d0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_re_V_d0 <= grp_fft_fu_175_buf_re_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_re_V_d0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_d0;
        else 
            buf_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_re_V_we0_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_we0, grp_fft_fu_175_buf_re_we0, grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_we0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_re_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_re_V_we0 <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_buf_re_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            buf_re_V_we0 <= grp_fft_fu_175_buf_re_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buf_re_V_we0 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_buf_re_V_we0;
        else 
            buf_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_ap_start_reg;
    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start <= grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_ap_start_reg;
    grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TREADY <= (out_stream_TREADY_int_regslice and ap_CS_fsm_state13);
    grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start <= grp_EQ_Pipeline_VITIS_LOOP_98_1_fu_201_ap_start_reg;
    grp_fft_fu_175_ap_start <= grp_fft_fu_175_ap_start_reg;

    grp_fft_fu_175_inverse_offset_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fft_fu_175_inverse_offset <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fft_fu_175_inverse_offset <= ap_const_logic_0;
        else 
            grp_fft_fu_175_inverse_offset <= 'X';
        end if; 
    end process;

    in_stream_TREADY <= regslice_both_in_stream_V_data_V_U_ack_in;

    in_stream_TREADY_int_regslice_assign_proc : process(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_in_stream_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_stream_TREADY_int_regslice <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_in_stream_TREADY;
        else 
            in_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;
    out_stream_TVALID_int_regslice <= grp_EQ_Pipeline_VITIS_LOOP_187_2_fu_209_out_stream_TVALID;
    sub_fu_253_p2 <= std_logic_vector(unsigned(grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out) + unsigned(ap_const_lv11_7FF));
    trunc_ln98_fu_244_p1 <= grp_EQ_Pipeline_VITIS_LOOP_165_1_fu_154_count_out(10 - 1 downto 0);
    zext_ln98_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f6_cast_reg_268),64));
end behav;
