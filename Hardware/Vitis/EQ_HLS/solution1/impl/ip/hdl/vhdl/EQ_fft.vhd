-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EQ_fft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buf_re_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_re_ce0 : OUT STD_LOGIC;
    buf_re_we0 : OUT STD_LOGIC;
    buf_re_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
    buf_re_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
    buf_re_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_re_ce1 : OUT STD_LOGIC;
    buf_re_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
    buf_im_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_im_ce0 : OUT STD_LOGIC;
    buf_im_we0 : OUT STD_LOGIC;
    buf_im_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
    buf_im_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
    buf_im_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_im_ce1 : OUT STD_LOGIC;
    buf_im_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
    fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
    inverse_offset : IN STD_LOGIC );
end;


architecture behav of EQ_fft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal twiddle_re_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal twiddle_re_V_ce0 : STD_LOGIC;
    signal twiddle_re_V_we0 : STD_LOGIC;
    signal twiddle_re_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal twiddle_im_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal twiddle_im_V_ce0 : STD_LOGIC;
    signal twiddle_im_V_we0 : STD_LOGIC;
    signal twiddle_im_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal reg_297 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal reg_301 : STD_LOGIC_VECTOR (39 downto 0);
    signal inverse_offset_read_read_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fft_size_cast_fu_310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal fft_size_cast_reg_629 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln53_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln53_reg_640 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_fu_330_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln53_reg_651 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_54_fu_336_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_54_reg_656 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln53_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_661 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_reg_672 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal buf_re_addr_reg_676 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_addr_reg_681 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_addr_1_reg_686 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_addr_1_reg_691 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln8_reg_702 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln63_1_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln66_fu_412_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln66_reg_707 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln66_1_fu_416_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln66_1_reg_712 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_55_fu_425_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_55_reg_717 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln66_fu_434_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln66_reg_725 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln66_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln68_fu_457_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln68_reg_733 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal add_ln69_fu_463_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln69_reg_738 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln68_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln73_fu_474_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln73_reg_753 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_re_addr_2_reg_758 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_addr_2_reg_763 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln66_fu_490_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tr_V_reg_773 : STD_LOGIC_VECTOR (23 downto 0);
    signal ti_V_reg_778 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1316_fu_495_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal sext_ln1319_fu_499_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln1316_1_fu_508_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln1319_1_fu_512_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_17_reg_807 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_515_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_19_reg_812 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_521_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_20_reg_817 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_fu_527_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_21_reg_822 : STD_LOGIC_VECTOR (61 downto 0);
    signal buf_re_addr_3_reg_827 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_im_addr_3_reg_832 : STD_LOGIC_VECTOR (9 downto 0);
    signal pr_V_reg_837 : STD_LOGIC_VECTOR (39 downto 0);
    signal pi_V_reg_843 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln859_fu_578_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln859_reg_849 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sub_ln859_1_fu_583_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln859_1_reg_854 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_init_twiddle_fu_248_ap_start : STD_LOGIC;
    signal grp_init_twiddle_fu_248_ap_done : STD_LOGIC;
    signal grp_init_twiddle_fu_248_ap_idle : STD_LOGIC;
    signal grp_init_twiddle_fu_248_ap_ready : STD_LOGIC;
    signal grp_init_twiddle_fu_248_twiddle_re_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_init_twiddle_fu_248_twiddle_re_V_ce0 : STD_LOGIC;
    signal grp_init_twiddle_fu_248_twiddle_re_V_we0 : STD_LOGIC;
    signal grp_init_twiddle_fu_248_twiddle_re_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_init_twiddle_fu_248_twiddle_im_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_init_twiddle_fu_248_twiddle_im_V_ce0 : STD_LOGIC;
    signal grp_init_twiddle_fu_248_twiddle_im_V_we0 : STD_LOGIC;
    signal grp_init_twiddle_fu_248_twiddle_im_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_done : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_idle : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_ready : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out_ap_vld : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out_ap_vld : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_idle : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_ready : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out_ap_vld : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_done : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_idle : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_ready : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce0 : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_we0 : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce1 : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce0 : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_we0 : STD_LOGIC;
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce1 : STD_LOGIC;
    signal k_reg_214 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_reg_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal phi_mul_reg_237 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_init_twiddle_fu_248_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal logN_1_loc_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal zext_ln53_1_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_fu_362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_1_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln73_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_fu_82 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal s_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_3_fu_438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln859_fu_566_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln859_1_fu_572_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln53_2_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m2_fu_392_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_lshr_f_fu_420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln68_fu_448_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln73_1_fu_479_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_502_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_502_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_515_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_515_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_521_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_521_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_527_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_527_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_fu_538_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal ret_V_9_fu_552_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln859_fu_566_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln859_1_fu_572_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln859_fu_578_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln859_1_fu_583_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_block_state18_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component EQ_init_twiddle IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
        inverse : IN STD_LOGIC;
        twiddle_re_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        twiddle_re_V_ce0 : OUT STD_LOGIC;
        twiddle_re_V_we0 : OUT STD_LOGIC;
        twiddle_re_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        twiddle_im_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        twiddle_im_V_ce0 : OUT STD_LOGIC;
        twiddle_im_V_we0 : OUT STD_LOGIC;
        twiddle_im_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component EQ_fft_Pipeline_VITIS_LOOP_50_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
        logN_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        logN_out_ap_vld : OUT STD_LOGIC;
        logN_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        logN_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component EQ_fft_Pipeline_VITIS_LOOP_38_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        logN_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        i_4_cast_cast : IN STD_LOGIC_VECTOR (9 downto 0);
        n_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_out_ap_vld : OUT STD_LOGIC );
    end component;


    component EQ_fft_Pipeline_VITIS_LOOP_90_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
        buf_re_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_ce0 : OUT STD_LOGIC;
        buf_re_we0 : OUT STD_LOGIC;
        buf_re_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_re_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_re_ce1 : OUT STD_LOGIC;
        buf_re_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        conv_i_i_i28 : IN STD_LOGIC_VECTOR (10 downto 0);
        buf_im_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_ce0 : OUT STD_LOGIC;
        buf_im_we0 : OUT STD_LOGIC;
        buf_im_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        buf_im_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        buf_im_ce1 : OUT STD_LOGIC;
        buf_im_q1 : IN STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component EQ_mul_40s_24s_62_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component EQ_fft_twiddle_re_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    twiddle_re_V_U : component EQ_fft_twiddle_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twiddle_re_V_address0,
        ce0 => twiddle_re_V_ce0,
        we0 => twiddle_re_V_we0,
        d0 => grp_init_twiddle_fu_248_twiddle_re_V_d0,
        q0 => twiddle_re_V_q0);

    twiddle_im_V_U : component EQ_fft_twiddle_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 24,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twiddle_im_V_address0,
        ce0 => twiddle_im_V_ce0,
        we0 => twiddle_im_V_we0,
        d0 => grp_init_twiddle_fu_248_twiddle_im_V_d0,
        q0 => twiddle_im_V_q0);

    grp_init_twiddle_fu_248 : component EQ_init_twiddle
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_init_twiddle_fu_248_ap_start,
        ap_done => grp_init_twiddle_fu_248_ap_done,
        ap_idle => grp_init_twiddle_fu_248_ap_idle,
        ap_ready => grp_init_twiddle_fu_248_ap_ready,
        fft_size => fft_size,
        inverse => inverse_offset,
        twiddle_re_V_address0 => grp_init_twiddle_fu_248_twiddle_re_V_address0,
        twiddle_re_V_ce0 => grp_init_twiddle_fu_248_twiddle_re_V_ce0,
        twiddle_re_V_we0 => grp_init_twiddle_fu_248_twiddle_re_V_we0,
        twiddle_re_V_d0 => grp_init_twiddle_fu_248_twiddle_re_V_d0,
        twiddle_im_V_address0 => grp_init_twiddle_fu_248_twiddle_im_V_address0,
        twiddle_im_V_ce0 => grp_init_twiddle_fu_248_twiddle_im_V_ce0,
        twiddle_im_V_we0 => grp_init_twiddle_fu_248_twiddle_im_V_we0,
        twiddle_im_V_d0 => grp_init_twiddle_fu_248_twiddle_im_V_d0);

    grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272 : component EQ_fft_Pipeline_VITIS_LOOP_50_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start,
        ap_done => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_done,
        ap_idle => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_idle,
        ap_ready => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_ready,
        fft_size => fft_size,
        logN_out => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out,
        logN_out_ap_vld => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out_ap_vld,
        logN_1_out => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out,
        logN_1_out_ap_vld => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out_ap_vld);

    grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280 : component EQ_fft_Pipeline_VITIS_LOOP_38_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start,
        ap_done => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done,
        ap_idle => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_idle,
        ap_ready => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_ready,
        logN_reload => grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out,
        i_4_cast_cast => empty_54_reg_656,
        n_out => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out,
        n_out_ap_vld => grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out_ap_vld);

    grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287 : component EQ_fft_Pipeline_VITIS_LOOP_90_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start,
        ap_done => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_done,
        ap_idle => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_idle,
        ap_ready => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_ready,
        fft_size => fft_size,
        buf_re_address0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address0,
        buf_re_ce0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce0,
        buf_re_we0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_we0,
        buf_re_d0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_d0,
        buf_re_address1 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address1,
        buf_re_ce1 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce1,
        buf_re_q1 => buf_re_q1,
        conv_i_i_i28 => fft_size,
        buf_im_address0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address0,
        buf_im_ce0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce0,
        buf_im_we0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_we0,
        buf_im_d0 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_d0,
        buf_im_address1 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address1,
        buf_im_ce1 => grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce1,
        buf_im_q1 => buf_im_q1);

    mul_40s_24s_62_2_1_U64 : component EQ_mul_40s_24s_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 40,
        din1_WIDTH => 24,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_502_p0,
        din1 => grp_fu_502_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_502_p2);

    mul_40s_24s_62_2_1_U65 : component EQ_mul_40s_24s_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 40,
        din1_WIDTH => 24,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_515_p0,
        din1 => grp_fu_515_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_515_p2);

    mul_40s_24s_62_2_1_U66 : component EQ_mul_40s_24s_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 40,
        din1_WIDTH => 24,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_521_p0,
        din1 => grp_fu_521_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_521_p2);

    mul_40s_24s_62_2_1_U67 : component EQ_mul_40s_24s_62_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 40,
        din1_WIDTH => 24,
        dout_WIDTH => 62)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_527_p0,
        din1 => grp_fu_527_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_527_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln53_fu_325_p2 = ap_const_lv1_0))) then 
                    grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_ready = ap_const_logic_1)) then 
                    grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (icmp_ln63_reg_661 = ap_const_lv1_0)) or ((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (icmp_ln63_1_fu_381_p2 = ap_const_lv1_1))))) then 
                    grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_ready = ap_const_logic_1)) then 
                    grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_init_twiddle_fu_248_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_init_twiddle_fu_248_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_init_twiddle_fu_248_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_init_twiddle_fu_248_ap_ready = ap_const_logic_1)) then 
                    grp_init_twiddle_fu_248_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_1_fu_82 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_1_fu_82 <= add_ln53_reg_651;
            end if; 
        end if;
    end process;

    j_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                j_reg_226 <= add_ln68_reg_733;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln66_fu_429_p2 = ap_const_lv1_1))) then 
                j_reg_226 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    k_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln63_1_fu_381_p2 = ap_const_lv1_0) and (icmp_ln63_reg_661 = ap_const_lv1_1))) then 
                k_reg_214 <= ap_const_lv64_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln68_fu_452_p2 = ap_const_lv1_1))) then 
                k_reg_214 <= add_ln66_fu_490_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                phi_mul_reg_237 <= add_ln69_reg_738;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln66_fu_429_p2 = ap_const_lv1_1))) then 
                phi_mul_reg_237 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    s_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln63_fu_341_p2 = ap_const_lv1_1) and (icmp_ln53_fu_325_p2 = ap_const_lv1_1))) then 
                s_fu_98 <= ap_const_lv32_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln66_fu_429_p2 = ap_const_lv1_0))) then 
                s_fu_98 <= s_3_fu_438_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln53_reg_651 <= add_ln53_fu_330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln68_reg_733 <= add_ln68_fu_457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln68_fu_452_p2 = ap_const_lv1_0))) then
                add_ln69_reg_738 <= add_ln69_fu_463_p2;
                add_ln73_reg_753 <= add_ln73_fu_474_p2;
                buf_im_addr_2_reg_763 <= zext_ln73_1_fu_484_p1(10 - 1 downto 0);
                buf_re_addr_2_reg_758 <= zext_ln73_1_fu_484_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln55_fu_368_p2 = ap_const_lv1_1))) then
                buf_im_addr_1_reg_691 <= zext_ln55_fu_362_p1(10 - 1 downto 0);
                buf_im_addr_reg_681 <= zext_ln53_1_fu_351_p1(10 - 1 downto 0);
                buf_re_addr_1_reg_686 <= zext_ln55_fu_362_p1(10 - 1 downto 0);
                buf_re_addr_reg_676 <= zext_ln53_1_fu_351_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                buf_im_addr_3_reg_832 <= zext_ln73_fu_533_p1(10 - 1 downto 0);
                buf_re_addr_3_reg_827 <= zext_ln73_fu_533_p1(10 - 1 downto 0);
                r_V_17_reg_807 <= grp_fu_502_p2;
                r_V_19_reg_812 <= grp_fu_515_p2;
                r_V_20_reg_817 <= grp_fu_521_p2;
                r_V_21_reg_822 <= grp_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln53_fu_325_p2 = ap_const_lv1_0))) then
                empty_54_reg_656 <= empty_54_fu_336_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln63_1_fu_381_p2 = ap_const_lv1_0) and (icmp_ln63_reg_661 = ap_const_lv1_1))) then
                empty_55_reg_717 <= empty_55_fu_425_p1;
                sext_ln66_1_reg_712 <= sext_ln66_1_fu_416_p1;
                sext_ln66_reg_707 <= sext_ln66_fu_412_p1;
                trunc_ln8_reg_702 <= m_fu_386_p2(10 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    fft_size_cast_reg_629(10 downto 0) <= fft_size_cast_fu_310_p1(10 downto 0);
                    zext_ln53_reg_640(10 downto 0) <= zext_ln53_fu_319_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln55_reg_672 <= icmp_ln55_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln53_fu_325_p2 = ap_const_lv1_1))) then
                icmp_ln63_reg_661 <= icmp_ln63_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                logN_1_loc_fu_90 <= grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                pi_V_reg_843 <= ret_V_9_fu_552_p2(61 downto 22);
                pr_V_reg_837 <= ret_V_fu_538_p2(61 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_297 <= buf_re_q0;
                reg_301 <= buf_im_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                sub_ln859_1_reg_854 <= sub_ln859_1_fu_583_p2;
                sub_ln859_reg_849 <= sub_ln859_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                ti_V_reg_778 <= twiddle_im_V_q0;
                tr_V_reg_773 <= twiddle_re_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln66_fu_429_p2 = ap_const_lv1_1))) then
                trunc_ln66_reg_725 <= trunc_ln66_fu_434_p1;
            end if;
        end if;
    end process;
    fft_size_cast_reg_629(31 downto 11) <= "000000000000000000000";
    zext_ln53_reg_640(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, icmp_ln53_fu_325_p2, icmp_ln63_reg_661, icmp_ln55_fu_368_p2, ap_CS_fsm_state6, ap_CS_fsm_state9, icmp_ln63_1_fu_381_p2, ap_CS_fsm_state10, icmp_ln66_fu_429_p2, ap_CS_fsm_state11, icmp_ln68_fu_452_p2, grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state18, ap_block_state18_on_subcall_done, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln53_fu_325_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln55_fu_368_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and ((icmp_ln63_1_fu_381_p2 = ap_const_lv1_1) or (icmp_ln63_reg_661 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln66_fu_429_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln68_fu_452_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state18 => 
                if (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln53_fu_330_p2 <= std_logic_vector(unsigned(i_1_fu_82) + unsigned(ap_const_lv11_1));
    add_ln66_fu_490_p2 <= std_logic_vector(signed(sext_ln66_reg_707) + signed(k_reg_214));
    add_ln68_fu_457_p2 <= std_logic_vector(unsigned(j_reg_226) + unsigned(ap_const_lv32_1));
    add_ln69_fu_463_p2 <= std_logic_vector(unsigned(phi_mul_reg_237) + unsigned(empty_55_reg_717));
    add_ln73_1_fu_479_p2 <= std_logic_vector(unsigned(add_ln73_fu_474_p2) + unsigned(trunc_ln8_reg_702));
    add_ln73_fu_474_p2 <= std_logic_vector(unsigned(trunc_ln68_fu_448_p1) + unsigned(trunc_ln66_reg_725));
    add_ln859_1_fu_572_p0 <= reg_301;
    add_ln859_1_fu_572_p2 <= std_logic_vector(unsigned(add_ln859_1_fu_572_p0) + unsigned(pi_V_reg_843));
    add_ln859_fu_566_p0 <= reg_297;
    add_ln859_fu_566_p2 <= std_logic_vector(unsigned(add_ln859_fu_566_p0) + unsigned(pr_V_reg_837));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(ap_block_state18_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state18_on_subcall_done)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done)
    begin
        if ((grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state18_on_subcall_done_assign_proc : process(inverse_offset_read_read_fu_102_p2, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_done)
    begin
                ap_block_state18_on_subcall_done <= ((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_init_twiddle_fu_248_ap_done, grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_done = ap_const_logic_0) or (grp_init_twiddle_fu_248_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state18, ap_block_state18_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18, ap_block_state18_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state18_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_address0_assign_proc : process(inverse_offset_read_read_fu_102_p2, ap_CS_fsm_state6, buf_im_addr_reg_681, buf_im_addr_1_reg_691, ap_CS_fsm_state11, buf_im_addr_2_reg_763, ap_CS_fsm_state14, buf_im_addr_3_reg_832, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address0, ap_CS_fsm_state17, ap_CS_fsm_state18, zext_ln55_fu_362_p1, zext_ln73_1_fu_484_p1, zext_ln73_fu_533_p1, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buf_im_address0 <= buf_im_addr_2_reg_763;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buf_im_address0 <= buf_im_addr_3_reg_832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buf_im_address0 <= zext_ln73_fu_533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf_im_address0 <= zext_ln73_1_fu_484_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_im_address0 <= buf_im_addr_1_reg_691;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_im_address0 <= buf_im_addr_reg_681;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_im_address0 <= zext_ln55_fu_362_p1(10 - 1 downto 0);
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_im_address0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address0;
        else 
            buf_im_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    buf_im_address1 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_address1;

    buf_im_ce0_assign_proc : process(inverse_offset_read_read_fu_102_p2, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            buf_im_ce0 <= ap_const_logic_1;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_im_ce0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce0;
        else 
            buf_im_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_ce1_assign_proc : process(inverse_offset_read_read_fu_102_p2, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce1, ap_CS_fsm_state18)
    begin
        if (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_im_ce1 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_ce1;
        else 
            buf_im_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_im_d0_assign_proc : process(buf_im_q0, inverse_offset_read_read_fu_102_p2, ap_CS_fsm_state16, sub_ln859_1_reg_854, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_d0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7, add_ln859_1_fu_572_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buf_im_d0 <= sub_ln859_1_reg_854;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buf_im_d0 <= add_ln859_1_fu_572_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_im_d0 <= buf_im_q0;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_im_d0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_d0;
        else 
            buf_im_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_im_we0_assign_proc : process(inverse_offset_read_read_fu_102_p2, icmp_ln55_reg_672, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_we0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln55_reg_672 = ap_const_lv1_1)))) then 
            buf_im_we0 <= ap_const_logic_1;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_im_we0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_im_we0;
        else 
            buf_im_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_address0_assign_proc : process(inverse_offset_read_read_fu_102_p2, ap_CS_fsm_state6, buf_re_addr_reg_676, buf_re_addr_1_reg_686, ap_CS_fsm_state11, buf_re_addr_2_reg_758, ap_CS_fsm_state14, buf_re_addr_3_reg_827, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address0, ap_CS_fsm_state17, ap_CS_fsm_state18, zext_ln55_fu_362_p1, zext_ln73_1_fu_484_p1, zext_ln73_fu_533_p1, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buf_re_address0 <= buf_re_addr_2_reg_758;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buf_re_address0 <= buf_re_addr_3_reg_827;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buf_re_address0 <= zext_ln73_fu_533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf_re_address0 <= zext_ln73_1_fu_484_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_re_address0 <= buf_re_addr_1_reg_686;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_re_address0 <= buf_re_addr_reg_676;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_re_address0 <= zext_ln55_fu_362_p1(10 - 1 downto 0);
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_re_address0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address0;
        else 
            buf_re_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    buf_re_address1 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_address1;

    buf_re_ce0_assign_proc : process(inverse_offset_read_read_fu_102_p2, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            buf_re_ce0 <= ap_const_logic_1;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_re_ce0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce0;
        else 
            buf_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_ce1_assign_proc : process(inverse_offset_read_read_fu_102_p2, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce1, ap_CS_fsm_state18)
    begin
        if (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_re_ce1 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_ce1;
        else 
            buf_re_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_re_d0_assign_proc : process(buf_re_q0, inverse_offset_read_read_fu_102_p2, sub_ln859_reg_849, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_d0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7, add_ln859_fu_566_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buf_re_d0 <= sub_ln859_reg_849;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buf_re_d0 <= add_ln859_fu_566_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            buf_re_d0 <= buf_re_q0;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_re_d0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_d0;
        else 
            buf_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_re_we0_assign_proc : process(inverse_offset_read_read_fu_102_p2, icmp_ln55_reg_672, ap_CS_fsm_state16, grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_we0, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln55_reg_672 = ap_const_lv1_1)))) then 
            buf_re_we0 <= ap_const_logic_1;
        elsif (((inverse_offset_read_read_fu_102_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            buf_re_we0 <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_buf_re_we0;
        else 
            buf_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_54_fu_336_p1 <= i_1_fu_82(10 - 1 downto 0);
    empty_55_fu_425_p1 <= p_lshr_f_fu_420_p2(9 - 1 downto 0);
    fft_size_cast_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fft_size),32));
    grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start <= grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_ap_start_reg;
    grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start <= grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_ap_start_reg;
    grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start <= grp_fft_Pipeline_VITIS_LOOP_90_6_fu_287_ap_start_reg;
    grp_fu_502_p0 <= sext_ln1316_fu_495_p1(40 - 1 downto 0);
    grp_fu_502_p1 <= sext_ln1319_fu_499_p1(24 - 1 downto 0);
    grp_fu_515_p0 <= sext_ln1316_1_fu_508_p1(40 - 1 downto 0);
    grp_fu_515_p1 <= sext_ln1319_1_fu_512_p1(24 - 1 downto 0);
    grp_fu_521_p0 <= sext_ln1316_fu_495_p1(40 - 1 downto 0);
    grp_fu_521_p1 <= sext_ln1319_1_fu_512_p1(24 - 1 downto 0);
    grp_fu_527_p0 <= sext_ln1316_1_fu_508_p1(40 - 1 downto 0);
    grp_fu_527_p1 <= sext_ln1319_fu_499_p1(24 - 1 downto 0);
    grp_init_twiddle_fu_248_ap_start <= grp_init_twiddle_fu_248_ap_start_reg;
    icmp_ln53_fu_325_p2 <= "1" when (i_1_fu_82 = fft_size) else "0";
    icmp_ln55_fu_368_p2 <= "1" when (signed(zext_ln53_2_fu_356_p1) < signed(grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out)) else "0";
    icmp_ln63_1_fu_381_p2 <= "1" when (s_fu_98 = logN_1_loc_fu_90) else "0";
    icmp_ln63_fu_341_p2 <= "1" when (signed(grp_fft_Pipeline_VITIS_LOOP_50_1_fu_272_logN_out) > signed(ap_const_lv32_0)) else "0";
    icmp_ln66_fu_429_p2 <= "1" when (signed(k_reg_214) < signed(zext_ln53_reg_640)) else "0";
    icmp_ln68_fu_452_p2 <= "1" when (j_reg_226 = sext_ln66_1_reg_712) else "0";
    inverse_offset_read_read_fu_102_p2 <= (0=>inverse_offset, others=>'-');
    m2_fu_392_p4 <= m_fu_386_p2(31 downto 1);
    m_fu_386_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & s_fu_98(31-1 downto 0)))));
    p_lshr_f_fu_420_p2 <= std_logic_vector(shift_right(unsigned(fft_size_cast_reg_629),to_integer(unsigned('0' & s_fu_98(31-1 downto 0)))));
    ret_V_9_fu_552_p2 <= std_logic_vector(unsigned(r_V_21_reg_822) + unsigned(r_V_20_reg_817));
    ret_V_fu_538_p2 <= std_logic_vector(unsigned(r_V_17_reg_807) - unsigned(r_V_19_reg_812));
    s_3_fu_438_p2 <= std_logic_vector(unsigned(s_fu_98) + unsigned(ap_const_lv32_1));
        sext_ln1316_1_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_301),62));

        sext_ln1316_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_297),62));

        sext_ln1319_1_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ti_V_reg_778),62));

        sext_ln1319_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tr_V_reg_773),62));

        sext_ln66_1_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m2_fu_392_p4),32));

        sext_ln66_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fu_386_p2),64));

    sub_ln859_1_fu_583_p0 <= reg_301;
    sub_ln859_1_fu_583_p2 <= std_logic_vector(unsigned(sub_ln859_1_fu_583_p0) - unsigned(pi_V_reg_843));
    sub_ln859_fu_578_p0 <= reg_297;
    sub_ln859_fu_578_p2 <= std_logic_vector(unsigned(sub_ln859_fu_578_p0) - unsigned(pr_V_reg_837));
    trunc_ln66_fu_434_p1 <= k_reg_214(10 - 1 downto 0);
    trunc_ln68_fu_448_p1 <= j_reg_226(10 - 1 downto 0);

    twiddle_im_V_address0_assign_proc : process(ap_CS_fsm_state11, grp_init_twiddle_fu_248_twiddle_im_V_address0, ap_CS_fsm_state2, zext_ln70_fu_468_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            twiddle_im_V_address0 <= zext_ln70_fu_468_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_im_V_address0 <= grp_init_twiddle_fu_248_twiddle_im_V_address0;
        else 
            twiddle_im_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    twiddle_im_V_ce0_assign_proc : process(ap_CS_fsm_state11, grp_init_twiddle_fu_248_twiddle_im_V_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            twiddle_im_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_im_V_ce0 <= grp_init_twiddle_fu_248_twiddle_im_V_ce0;
        else 
            twiddle_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    twiddle_im_V_we0_assign_proc : process(grp_init_twiddle_fu_248_twiddle_im_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_im_V_we0 <= grp_init_twiddle_fu_248_twiddle_im_V_we0;
        else 
            twiddle_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    twiddle_re_V_address0_assign_proc : process(ap_CS_fsm_state11, grp_init_twiddle_fu_248_twiddle_re_V_address0, ap_CS_fsm_state2, zext_ln70_fu_468_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            twiddle_re_V_address0 <= zext_ln70_fu_468_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_re_V_address0 <= grp_init_twiddle_fu_248_twiddle_re_V_address0;
        else 
            twiddle_re_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    twiddle_re_V_ce0_assign_proc : process(ap_CS_fsm_state11, grp_init_twiddle_fu_248_twiddle_re_V_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            twiddle_re_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_re_V_ce0 <= grp_init_twiddle_fu_248_twiddle_re_V_ce0;
        else 
            twiddle_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    twiddle_re_V_we0_assign_proc : process(grp_init_twiddle_fu_248_twiddle_re_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            twiddle_re_V_we0 <= grp_init_twiddle_fu_248_twiddle_re_V_we0;
        else 
            twiddle_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln53_1_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_82),64));
    zext_ln53_2_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_82),32));
    zext_ln53_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fft_size),64));
    zext_ln55_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fft_Pipeline_VITIS_LOOP_38_1_fu_280_n_out),64));
    zext_ln70_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_237),64));
    zext_ln73_1_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_1_fu_479_p2),64));
    zext_ln73_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_reg_753),64));
end behav;
