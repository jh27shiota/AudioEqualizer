-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EQ_init_twiddle is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fft_size : IN STD_LOGIC_VECTOR (10 downto 0);
    inverse : IN STD_LOGIC;
    twiddle_re_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    twiddle_re_V_ce0 : OUT STD_LOGIC;
    twiddle_re_V_we0 : OUT STD_LOGIC;
    twiddle_re_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0);
    twiddle_im_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    twiddle_im_V_ce0 : OUT STD_LOGIC;
    twiddle_im_V_we0 : OUT STD_LOGIC;
    twiddle_im_V_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
end;


architecture behav of EQ_init_twiddle is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_401921FB54442D18 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000011001001000011111101101010100010001000010110100011000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_16 : STD_LOGIC_VECTOR (11 downto 0) := "000000010110";
    constant ap_const_lv12_FEA : STD_LOGIC_VECTOR (11 downto 0) := "111111101010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_18 : STD_LOGIC_VECTOR (11 downto 0) := "000000011000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fft_size_cast_fu_184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_cast_reg_702 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_reg_712 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_reg_717 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state7_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter50 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter51 : BOOLEAN;
    signal ap_block_state59_pp0_stage0_iter52 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter53 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter54 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter55 : BOOLEAN;
    signal ap_block_state63_pp0_stage0_iter56 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter57 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter58 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter59 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter60 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter61 : BOOLEAN;
    signal ap_block_state69_pp0_stage0_iter62 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter63 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter64 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter65 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter66 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter67 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter68 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter69 : BOOLEAN;
    signal ap_block_state77_pp0_stage0_iter70 : BOOLEAN;
    signal ap_block_state78_pp0_stage0_iter71 : BOOLEAN;
    signal ap_block_state79_pp0_stage0_iter72 : BOOLEAN;
    signal ap_block_state80_pp0_stage0_iter73 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter74 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter75 : BOOLEAN;
    signal ap_block_state83_pp0_stage0_iter76 : BOOLEAN;
    signal ap_block_state84_pp0_stage0_iter77 : BOOLEAN;
    signal ap_block_state85_pp0_stage0_iter78 : BOOLEAN;
    signal ap_block_state86_pp0_stage0_iter79 : BOOLEAN;
    signal ap_block_state87_pp0_stage0_iter80 : BOOLEAN;
    signal ap_block_state88_pp0_stage0_iter81 : BOOLEAN;
    signal ap_block_state89_pp0_stage0_iter82 : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter83 : BOOLEAN;
    signal ap_block_state91_pp0_stage0_iter84 : BOOLEAN;
    signal ap_block_state92_pp0_stage0_iter85 : BOOLEAN;
    signal ap_block_state93_pp0_stage0_iter86 : BOOLEAN;
    signal ap_block_state94_pp0_stage0_iter87 : BOOLEAN;
    signal ap_block_state95_pp0_stage0_iter88 : BOOLEAN;
    signal ap_block_state96_pp0_stage0_iter89 : BOOLEAN;
    signal ap_block_state97_pp0_stage0_iter90 : BOOLEAN;
    signal ap_block_state98_pp0_stage0_iter91 : BOOLEAN;
    signal ap_block_state99_pp0_stage0_iter92 : BOOLEAN;
    signal ap_block_state100_pp0_stage0_iter93 : BOOLEAN;
    signal ap_block_state101_pp0_stage0_iter94 : BOOLEAN;
    signal ap_block_state102_pp0_stage0_iter95 : BOOLEAN;
    signal ap_block_state103_pp0_stage0_iter96 : BOOLEAN;
    signal ap_block_state104_pp0_stage0_iter97 : BOOLEAN;
    signal ap_block_state105_pp0_stage0_iter98 : BOOLEAN;
    signal ap_block_state106_pp0_stage0_iter99 : BOOLEAN;
    signal ap_block_state107_pp0_stage0_iter100 : BOOLEAN;
    signal ap_block_state108_pp0_stage0_iter101 : BOOLEAN;
    signal ap_block_state109_pp0_stage0_iter102 : BOOLEAN;
    signal ap_block_state110_pp0_stage0_iter103 : BOOLEAN;
    signal ap_block_state111_pp0_stage0_iter104 : BOOLEAN;
    signal ap_block_state112_pp0_stage0_iter105 : BOOLEAN;
    signal ap_block_state113_pp0_stage0_iter106 : BOOLEAN;
    signal ap_block_state114_pp0_stage0_iter107 : BOOLEAN;
    signal ap_block_state115_pp0_stage0_iter108 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_reg_717_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter18_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter19_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter20_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter21_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter22_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter23_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter24_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter25_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter26_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter27_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter28_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter29_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter30_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter31_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter32_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter33_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter34_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter35_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter36_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter37_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter38_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter39_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter40_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter41_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter42_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter43_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter44_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter45_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter46_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter47_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter48_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter49_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter50_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter51_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter52_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter53_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter54_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter55_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter56_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter57_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter58_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter59_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter60_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter61_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter62_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter63_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter64_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter65_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter66_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter67_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter68_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter69_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter70_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter71_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter72_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter73_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter74_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter75_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter76_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter77_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter78_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter79_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter80_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter81_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter82_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter83_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter84_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter85_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter86_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter87_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter88_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter89_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter90_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter91_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter92_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter93_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter94_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter95_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter96_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter97_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter98_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter99_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter100_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter101_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter102_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter103_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter104_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter105_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter106_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_717_pp0_iter107_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln28_fu_222_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln27_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_reg_730 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal grp_fu_172_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_reg_735 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_1_fu_246_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_1_reg_740 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sin_or_cos_double_s_fu_134_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_reg_746 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_sin_or_cos_double_s_fu_153_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_reg_751 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_reg_756 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_reg_756_pp0_iter106_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal man_V_2_fu_304_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_761 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_761_pp0_iter106_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln606_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln606_reg_766 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln606_reg_766_pp0_iter106_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln616_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln616_reg_773 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_342_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_778 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln617_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_reg_785 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln618_fu_356_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln618_reg_791 : STD_LOGIC_VECTOR (23 downto 0);
    signal ireg_1_fu_360_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_1_reg_797 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_1_reg_797_pp0_iter106_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal man_V_5_fu_411_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_802 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_802_pp0_iter106_reg : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln606_1_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln606_1_reg_807 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln606_1_reg_807_pp0_iter106_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln616_1_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln616_1_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_449_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_819 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln617_1_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln617_1_reg_826 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln618_1_fu_463_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln618_1_reg_832 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln616_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln616_reg_838 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln620_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln617_fu_507_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln617_reg_848 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln616_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln616_reg_853 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln616_1_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln616_1_reg_858 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln620_1_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln620_1_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln617_1_fu_569_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln617_1_reg_868 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln616_1_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln616_1_reg_873 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln606_fu_631_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln606_reg_878 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln606_1_fu_678_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln606_1_reg_883 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter53 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter54 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter55 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter56 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter57 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter58 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter59 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter60 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter61 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter62 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter63 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter64 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter65 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter66 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter67 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter68 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter69 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter70 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter71 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter72 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter73 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter74 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter75 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter76 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter77 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter78 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter79 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter80 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter81 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter82 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter83 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter84 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter85 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter86 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter87 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter88 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter89 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter90 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter91 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter92 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter93 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter94 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter95 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter96 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter97 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter98 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter99 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter100 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter101 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter102 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter103 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter104 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter105 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter106 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter107 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter108 : STD_LOGIC := '0';
    signal grp_sin_or_cos_double_s_fu_134_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_134_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_134_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_134_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_153_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_153_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_153_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_153_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_double_s_fu_134_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_sin_or_cos_double_s_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal i_cast_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_92 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln27_fu_212_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_181_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln28_fu_218_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_177_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln29_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln29_fu_236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal angle_1_fu_246_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln29_1_fu_242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_268_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_fu_282_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_19_fu_286_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_fu_294_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_298_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln590_fu_256_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_fu_278_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_318_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln616_fu_330_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_fu_336_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_tmp_1_fu_375_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln600_1_fu_389_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_21_fu_393_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln604_1_fu_401_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_20_fu_367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_405_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln590_1_fu_363_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_1_fu_385_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_425_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln616_1_fu_437_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln616_1_fu_443_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln616cast_fu_480_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln638_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln639_fu_484_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln606_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln617_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln638_fu_489_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln617_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln616_1cast_fu_542_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln638_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln639_1_fu_546_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln606_1_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln617_1_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln638_1_fu_551_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln617_1_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln617_1_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln621_fu_591_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln621_fu_594_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln621_fu_599_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln623_fu_610_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln620_fu_618_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln616_fu_625_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln621_1_fu_638_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln621_1_fu_641_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_18_fu_650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln621_1_fu_646_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln623_1_fu_657_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln620_1_fu_665_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln616_2_fu_672_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component EQ_sin_or_cos_double_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (63 downto 0);
        do_cos : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component EQ_dmul_64ns_64ns_64_7_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component EQ_ddiv_64ns_64ns_64_59_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component EQ_sitodp_32ns_64_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_sin_or_cos_double_s_fu_134 : component EQ_sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_134_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_134_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_134_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_134_ap_ready,
        t_in => angle_1_reg_740,
        do_cos => ap_const_lv1_1,
        ap_return => grp_sin_or_cos_double_s_fu_134_ap_return);

    grp_sin_or_cos_double_s_fu_153 : component EQ_sin_or_cos_double_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_double_s_fu_153_ap_start,
        ap_done => grp_sin_or_cos_double_s_fu_153_ap_done,
        ap_idle => grp_sin_or_cos_double_s_fu_153_ap_idle,
        ap_ready => grp_sin_or_cos_double_s_fu_153_ap_ready,
        t_in => angle_1_reg_740,
        do_cos => ap_const_lv1_0,
        ap_return => grp_sin_or_cos_double_s_fu_153_ap_return);

    dmul_64ns_64ns_64_7_max_dsp_1_U41 : component EQ_dmul_64ns_64ns_64_7_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_reg_730,
        din1 => ap_const_lv64_401921FB54442D18,
        ce => ap_const_logic_1,
        dout => grp_fu_172_p2);

    ddiv_64ns_64ns_64_59_no_dsp_1_U42 : component EQ_ddiv_64ns_64ns_64_59_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 59,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => mul_reg_735,
        din1 => conv1_reg_712,
        ce => ap_const_logic_1,
        dout => grp_fu_177_p2);

    sitodp_32ns_64_6_no_dsp_1_U43 : component EQ_sitodp_32ns_64_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_181_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_181_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state7)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state7);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter100_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter100 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter100 <= ap_enable_reg_pp0_iter99;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter101_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter101 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter101 <= ap_enable_reg_pp0_iter100;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter102_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter102 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter102 <= ap_enable_reg_pp0_iter101;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter103_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter103 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter103 <= ap_enable_reg_pp0_iter102;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter104_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter104 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter104 <= ap_enable_reg_pp0_iter103;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter105_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter105 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter105 <= ap_enable_reg_pp0_iter104;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter106_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter106 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter106 <= ap_enable_reg_pp0_iter105;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter107_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter107 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter107 <= ap_enable_reg_pp0_iter106;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter108_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter108 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter108 <= ap_enable_reg_pp0_iter107;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter108 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter50 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter51 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter52 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter54 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter55 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter56 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter57 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter58 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter59 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter60 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter61_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter61 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter62_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter62 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter63_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter63 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter64_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter64 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter65_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter65 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter66_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter66 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter67_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter67 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter68_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter68 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter69_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter69 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter70_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter70 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter71_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter71 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter72_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter72 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter73_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter73 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter74_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter74 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter75_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter75 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter76_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter76 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter77_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter77 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter78_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter78 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter79_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter79 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter80_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter80 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter81_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter81 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter82_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter82 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter83_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter83 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter84_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter84 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter85_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter85 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter86_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter86 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter87_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter87 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter88_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter88 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter89_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter89 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter90_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter90 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter91_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter91 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter92_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter92 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter93_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter93 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter94_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter94 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter95_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter95 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter96_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter96 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter97_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter97 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter97 <= ap_enable_reg_pp0_iter96;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter98_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter98 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter98 <= ap_enable_reg_pp0_iter97;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter99_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter99 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter99 <= ap_enable_reg_pp0_iter98;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_double_s_fu_134_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_double_s_fu_134_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter71 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_sin_or_cos_double_s_fu_134_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_double_s_fu_134_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_double_s_fu_134_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_double_s_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_double_s_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter71 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_sin_or_cos_double_s_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_double_s_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_double_s_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_92 <= ap_const_lv10_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln27_fu_207_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_fu_92 <= add_ln27_fu_212_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                LD_1_reg_751 <= grp_sin_or_cos_double_s_fu_153_ap_return;
                LD_reg_746 <= grp_sin_or_cos_double_s_fu_134_ap_return;
                angle_1_reg_740 <= angle_1_fu_246_p3;
                i_1_reg_717_pp0_iter100_reg <= i_1_reg_717_pp0_iter99_reg;
                i_1_reg_717_pp0_iter101_reg <= i_1_reg_717_pp0_iter100_reg;
                i_1_reg_717_pp0_iter102_reg <= i_1_reg_717_pp0_iter101_reg;
                i_1_reg_717_pp0_iter103_reg <= i_1_reg_717_pp0_iter102_reg;
                i_1_reg_717_pp0_iter104_reg <= i_1_reg_717_pp0_iter103_reg;
                i_1_reg_717_pp0_iter105_reg <= i_1_reg_717_pp0_iter104_reg;
                i_1_reg_717_pp0_iter106_reg <= i_1_reg_717_pp0_iter105_reg;
                i_1_reg_717_pp0_iter107_reg <= i_1_reg_717_pp0_iter106_reg;
                i_1_reg_717_pp0_iter10_reg <= i_1_reg_717_pp0_iter9_reg;
                i_1_reg_717_pp0_iter11_reg <= i_1_reg_717_pp0_iter10_reg;
                i_1_reg_717_pp0_iter12_reg <= i_1_reg_717_pp0_iter11_reg;
                i_1_reg_717_pp0_iter13_reg <= i_1_reg_717_pp0_iter12_reg;
                i_1_reg_717_pp0_iter14_reg <= i_1_reg_717_pp0_iter13_reg;
                i_1_reg_717_pp0_iter15_reg <= i_1_reg_717_pp0_iter14_reg;
                i_1_reg_717_pp0_iter16_reg <= i_1_reg_717_pp0_iter15_reg;
                i_1_reg_717_pp0_iter17_reg <= i_1_reg_717_pp0_iter16_reg;
                i_1_reg_717_pp0_iter18_reg <= i_1_reg_717_pp0_iter17_reg;
                i_1_reg_717_pp0_iter19_reg <= i_1_reg_717_pp0_iter18_reg;
                i_1_reg_717_pp0_iter20_reg <= i_1_reg_717_pp0_iter19_reg;
                i_1_reg_717_pp0_iter21_reg <= i_1_reg_717_pp0_iter20_reg;
                i_1_reg_717_pp0_iter22_reg <= i_1_reg_717_pp0_iter21_reg;
                i_1_reg_717_pp0_iter23_reg <= i_1_reg_717_pp0_iter22_reg;
                i_1_reg_717_pp0_iter24_reg <= i_1_reg_717_pp0_iter23_reg;
                i_1_reg_717_pp0_iter25_reg <= i_1_reg_717_pp0_iter24_reg;
                i_1_reg_717_pp0_iter26_reg <= i_1_reg_717_pp0_iter25_reg;
                i_1_reg_717_pp0_iter27_reg <= i_1_reg_717_pp0_iter26_reg;
                i_1_reg_717_pp0_iter28_reg <= i_1_reg_717_pp0_iter27_reg;
                i_1_reg_717_pp0_iter29_reg <= i_1_reg_717_pp0_iter28_reg;
                i_1_reg_717_pp0_iter2_reg <= i_1_reg_717_pp0_iter1_reg;
                i_1_reg_717_pp0_iter30_reg <= i_1_reg_717_pp0_iter29_reg;
                i_1_reg_717_pp0_iter31_reg <= i_1_reg_717_pp0_iter30_reg;
                i_1_reg_717_pp0_iter32_reg <= i_1_reg_717_pp0_iter31_reg;
                i_1_reg_717_pp0_iter33_reg <= i_1_reg_717_pp0_iter32_reg;
                i_1_reg_717_pp0_iter34_reg <= i_1_reg_717_pp0_iter33_reg;
                i_1_reg_717_pp0_iter35_reg <= i_1_reg_717_pp0_iter34_reg;
                i_1_reg_717_pp0_iter36_reg <= i_1_reg_717_pp0_iter35_reg;
                i_1_reg_717_pp0_iter37_reg <= i_1_reg_717_pp0_iter36_reg;
                i_1_reg_717_pp0_iter38_reg <= i_1_reg_717_pp0_iter37_reg;
                i_1_reg_717_pp0_iter39_reg <= i_1_reg_717_pp0_iter38_reg;
                i_1_reg_717_pp0_iter3_reg <= i_1_reg_717_pp0_iter2_reg;
                i_1_reg_717_pp0_iter40_reg <= i_1_reg_717_pp0_iter39_reg;
                i_1_reg_717_pp0_iter41_reg <= i_1_reg_717_pp0_iter40_reg;
                i_1_reg_717_pp0_iter42_reg <= i_1_reg_717_pp0_iter41_reg;
                i_1_reg_717_pp0_iter43_reg <= i_1_reg_717_pp0_iter42_reg;
                i_1_reg_717_pp0_iter44_reg <= i_1_reg_717_pp0_iter43_reg;
                i_1_reg_717_pp0_iter45_reg <= i_1_reg_717_pp0_iter44_reg;
                i_1_reg_717_pp0_iter46_reg <= i_1_reg_717_pp0_iter45_reg;
                i_1_reg_717_pp0_iter47_reg <= i_1_reg_717_pp0_iter46_reg;
                i_1_reg_717_pp0_iter48_reg <= i_1_reg_717_pp0_iter47_reg;
                i_1_reg_717_pp0_iter49_reg <= i_1_reg_717_pp0_iter48_reg;
                i_1_reg_717_pp0_iter4_reg <= i_1_reg_717_pp0_iter3_reg;
                i_1_reg_717_pp0_iter50_reg <= i_1_reg_717_pp0_iter49_reg;
                i_1_reg_717_pp0_iter51_reg <= i_1_reg_717_pp0_iter50_reg;
                i_1_reg_717_pp0_iter52_reg <= i_1_reg_717_pp0_iter51_reg;
                i_1_reg_717_pp0_iter53_reg <= i_1_reg_717_pp0_iter52_reg;
                i_1_reg_717_pp0_iter54_reg <= i_1_reg_717_pp0_iter53_reg;
                i_1_reg_717_pp0_iter55_reg <= i_1_reg_717_pp0_iter54_reg;
                i_1_reg_717_pp0_iter56_reg <= i_1_reg_717_pp0_iter55_reg;
                i_1_reg_717_pp0_iter57_reg <= i_1_reg_717_pp0_iter56_reg;
                i_1_reg_717_pp0_iter58_reg <= i_1_reg_717_pp0_iter57_reg;
                i_1_reg_717_pp0_iter59_reg <= i_1_reg_717_pp0_iter58_reg;
                i_1_reg_717_pp0_iter5_reg <= i_1_reg_717_pp0_iter4_reg;
                i_1_reg_717_pp0_iter60_reg <= i_1_reg_717_pp0_iter59_reg;
                i_1_reg_717_pp0_iter61_reg <= i_1_reg_717_pp0_iter60_reg;
                i_1_reg_717_pp0_iter62_reg <= i_1_reg_717_pp0_iter61_reg;
                i_1_reg_717_pp0_iter63_reg <= i_1_reg_717_pp0_iter62_reg;
                i_1_reg_717_pp0_iter64_reg <= i_1_reg_717_pp0_iter63_reg;
                i_1_reg_717_pp0_iter65_reg <= i_1_reg_717_pp0_iter64_reg;
                i_1_reg_717_pp0_iter66_reg <= i_1_reg_717_pp0_iter65_reg;
                i_1_reg_717_pp0_iter67_reg <= i_1_reg_717_pp0_iter66_reg;
                i_1_reg_717_pp0_iter68_reg <= i_1_reg_717_pp0_iter67_reg;
                i_1_reg_717_pp0_iter69_reg <= i_1_reg_717_pp0_iter68_reg;
                i_1_reg_717_pp0_iter6_reg <= i_1_reg_717_pp0_iter5_reg;
                i_1_reg_717_pp0_iter70_reg <= i_1_reg_717_pp0_iter69_reg;
                i_1_reg_717_pp0_iter71_reg <= i_1_reg_717_pp0_iter70_reg;
                i_1_reg_717_pp0_iter72_reg <= i_1_reg_717_pp0_iter71_reg;
                i_1_reg_717_pp0_iter73_reg <= i_1_reg_717_pp0_iter72_reg;
                i_1_reg_717_pp0_iter74_reg <= i_1_reg_717_pp0_iter73_reg;
                i_1_reg_717_pp0_iter75_reg <= i_1_reg_717_pp0_iter74_reg;
                i_1_reg_717_pp0_iter76_reg <= i_1_reg_717_pp0_iter75_reg;
                i_1_reg_717_pp0_iter77_reg <= i_1_reg_717_pp0_iter76_reg;
                i_1_reg_717_pp0_iter78_reg <= i_1_reg_717_pp0_iter77_reg;
                i_1_reg_717_pp0_iter79_reg <= i_1_reg_717_pp0_iter78_reg;
                i_1_reg_717_pp0_iter7_reg <= i_1_reg_717_pp0_iter6_reg;
                i_1_reg_717_pp0_iter80_reg <= i_1_reg_717_pp0_iter79_reg;
                i_1_reg_717_pp0_iter81_reg <= i_1_reg_717_pp0_iter80_reg;
                i_1_reg_717_pp0_iter82_reg <= i_1_reg_717_pp0_iter81_reg;
                i_1_reg_717_pp0_iter83_reg <= i_1_reg_717_pp0_iter82_reg;
                i_1_reg_717_pp0_iter84_reg <= i_1_reg_717_pp0_iter83_reg;
                i_1_reg_717_pp0_iter85_reg <= i_1_reg_717_pp0_iter84_reg;
                i_1_reg_717_pp0_iter86_reg <= i_1_reg_717_pp0_iter85_reg;
                i_1_reg_717_pp0_iter87_reg <= i_1_reg_717_pp0_iter86_reg;
                i_1_reg_717_pp0_iter88_reg <= i_1_reg_717_pp0_iter87_reg;
                i_1_reg_717_pp0_iter89_reg <= i_1_reg_717_pp0_iter88_reg;
                i_1_reg_717_pp0_iter8_reg <= i_1_reg_717_pp0_iter7_reg;
                i_1_reg_717_pp0_iter90_reg <= i_1_reg_717_pp0_iter89_reg;
                i_1_reg_717_pp0_iter91_reg <= i_1_reg_717_pp0_iter90_reg;
                i_1_reg_717_pp0_iter92_reg <= i_1_reg_717_pp0_iter91_reg;
                i_1_reg_717_pp0_iter93_reg <= i_1_reg_717_pp0_iter92_reg;
                i_1_reg_717_pp0_iter94_reg <= i_1_reg_717_pp0_iter93_reg;
                i_1_reg_717_pp0_iter95_reg <= i_1_reg_717_pp0_iter94_reg;
                i_1_reg_717_pp0_iter96_reg <= i_1_reg_717_pp0_iter95_reg;
                i_1_reg_717_pp0_iter97_reg <= i_1_reg_717_pp0_iter96_reg;
                i_1_reg_717_pp0_iter98_reg <= i_1_reg_717_pp0_iter97_reg;
                i_1_reg_717_pp0_iter99_reg <= i_1_reg_717_pp0_iter98_reg;
                i_1_reg_717_pp0_iter9_reg <= i_1_reg_717_pp0_iter8_reg;
                icmp_ln606_1_reg_807 <= icmp_ln606_1_fu_419_p2;
                icmp_ln606_1_reg_807_pp0_iter106_reg <= icmp_ln606_1_reg_807;
                icmp_ln606_reg_766 <= icmp_ln606_fu_312_p2;
                icmp_ln606_reg_766_pp0_iter106_reg <= icmp_ln606_reg_766;
                icmp_ln616_1_reg_814 <= icmp_ln616_1_fu_431_p2;
                icmp_ln616_reg_773 <= icmp_ln616_fu_324_p2;
                icmp_ln617_1_reg_826 <= icmp_ln617_1_fu_457_p2;
                icmp_ln617_reg_785 <= icmp_ln617_fu_350_p2;
                ireg_1_reg_797 <= ireg_1_fu_360_p1;
                ireg_1_reg_797_pp0_iter106_reg <= ireg_1_reg_797;
                ireg_reg_756 <= ireg_fu_253_p1;
                ireg_reg_756_pp0_iter106_reg <= ireg_reg_756;
                man_V_2_reg_761 <= man_V_2_fu_304_p3;
                man_V_2_reg_761_pp0_iter106_reg <= man_V_2_reg_761;
                man_V_5_reg_802 <= man_V_5_fu_411_p3;
                man_V_5_reg_802_pp0_iter106_reg <= man_V_5_reg_802;
                mul_reg_735 <= grp_fu_172_p2;
                select_ln606_1_reg_883 <= select_ln606_1_fu_678_p3;
                select_ln606_reg_878 <= select_ln606_fu_631_p3;
                sh_amt_1_reg_819 <= sh_amt_1_fu_449_p3;
                sh_amt_reg_778 <= sh_amt_fu_342_p3;
                trunc_ln618_1_reg_832 <= trunc_ln618_1_fu_463_p1;
                trunc_ln618_reg_791 <= trunc_ln618_fu_356_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln606_1_reg_807 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln616_1_reg_873 <= and_ln616_1_fu_586_p2;
                icmp_ln620_1_reg_863 <= icmp_ln620_1_fu_532_p2;
                select_ln617_1_reg_868 <= select_ln617_1_fu_569_p3;
                sext_ln616_1_reg_858 <= sext_ln616_1_fu_529_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln606_reg_766 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln616_reg_853 <= and_ln616_fu_524_p2;
                icmp_ln620_reg_843 <= icmp_ln620_fu_470_p2;
                select_ln617_reg_848 <= select_ln617_fu_507_p3;
                sext_ln616_reg_838 <= sext_ln616_fu_467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                conv1_reg_712 <= grp_fu_181_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                conv_reg_730 <= grp_fu_181_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_1_reg_717 <= i_fu_92;
                i_1_reg_717_pp0_iter1_reg <= i_1_reg_717;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_lshr_f_cast_reg_702 <= fft_size(10 downto 1);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln27_fu_207_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter107, ap_enable_reg_pp0_iter108)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln27_fu_207_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_enable_reg_pp0_iter107 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_enable_reg_pp0_iter107 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln27_fu_207_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state116;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    F2_1_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_1_fu_385_p1));
    F2_fu_318_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_278_p1));
    add_ln27_fu_212_p2 <= std_logic_vector(unsigned(i_fu_92) + unsigned(ap_const_lv10_1));
    add_ln616_1_fu_437_p2 <= std_logic_vector(unsigned(F2_1_fu_425_p2) + unsigned(ap_const_lv12_FEA));
    add_ln616_fu_330_p2 <= std_logic_vector(unsigned(F2_fu_318_p2) + unsigned(ap_const_lv12_FEA));
    and_ln616_1_fu_586_p2 <= (xor_ln617_1_fu_580_p2 and icmp_ln616_1_reg_814);
    and_ln616_fu_524_p2 <= (xor_ln617_fu_518_p2 and icmp_ln616_reg_773);
    and_ln617_1_fu_564_p2 <= (xor_ln606_1_fu_559_p2 and icmp_ln617_1_reg_826);
    and_ln617_fu_502_p2 <= (xor_ln606_fu_497_p2 and icmp_ln617_reg_785);
    angle_1_fu_246_p0 <= (0=>inverse, others=>'-');
    angle_1_fu_246_p3 <= 
        grp_fu_177_p2 when (angle_1_fu_246_p0(0) = '1') else 
        bitcast_ln29_1_fu_242_p1;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state116 <= ap_CS_fsm(7);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state116_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp0_stage0_iter93 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage0_iter94 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp0_stage0_iter95 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp0_stage0_iter96 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage0_iter97 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp0_stage0_iter98 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage0_iter99 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage0_iter100 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage0_iter101 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage0_iter102 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp0_stage0_iter103 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage0_iter104 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp0_stage0_iter105 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp0_stage0_iter106 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp0_stage0_iter107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp0_stage0_iter108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage0_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter55 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage0_iter56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter61 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage0_iter68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage0_iter70 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage0_iter71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage0_iter72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage0_iter73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage0_iter75 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage0_iter76 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage0_iter77 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage0_iter78 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage0_iter79 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage0_iter80 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage0_iter81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage0_iter82 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage0_iter83 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage0_iter84 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage0_iter85 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage0_iter86 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage0_iter87 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp0_stage0_iter88 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage0_iter89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage0_iter90 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage0_iter91 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage0_iter92 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state7_assign_proc : process(icmp_ln27_fu_207_p2)
    begin
        if ((icmp_ln27_fu_207_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state116)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state116) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53, ap_enable_reg_pp0_iter54, ap_enable_reg_pp0_iter55, ap_enable_reg_pp0_iter56, ap_enable_reg_pp0_iter57, ap_enable_reg_pp0_iter58, ap_enable_reg_pp0_iter59, ap_enable_reg_pp0_iter60, ap_enable_reg_pp0_iter61, ap_enable_reg_pp0_iter62, ap_enable_reg_pp0_iter63, ap_enable_reg_pp0_iter64, ap_enable_reg_pp0_iter65, ap_enable_reg_pp0_iter66, ap_enable_reg_pp0_iter67, ap_enable_reg_pp0_iter68, ap_enable_reg_pp0_iter69, ap_enable_reg_pp0_iter70, ap_enable_reg_pp0_iter71, ap_enable_reg_pp0_iter72, ap_enable_reg_pp0_iter73, ap_enable_reg_pp0_iter74, ap_enable_reg_pp0_iter75, ap_enable_reg_pp0_iter76, ap_enable_reg_pp0_iter77, ap_enable_reg_pp0_iter78, ap_enable_reg_pp0_iter79, ap_enable_reg_pp0_iter80, ap_enable_reg_pp0_iter81, ap_enable_reg_pp0_iter82, ap_enable_reg_pp0_iter83, ap_enable_reg_pp0_iter84, ap_enable_reg_pp0_iter85, ap_enable_reg_pp0_iter86, ap_enable_reg_pp0_iter87, ap_enable_reg_pp0_iter88, ap_enable_reg_pp0_iter89, ap_enable_reg_pp0_iter90, ap_enable_reg_pp0_iter91, ap_enable_reg_pp0_iter92, ap_enable_reg_pp0_iter93, ap_enable_reg_pp0_iter94, ap_enable_reg_pp0_iter95, ap_enable_reg_pp0_iter96, ap_enable_reg_pp0_iter97, ap_enable_reg_pp0_iter98, ap_enable_reg_pp0_iter99, ap_enable_reg_pp0_iter100, ap_enable_reg_pp0_iter101, ap_enable_reg_pp0_iter102, ap_enable_reg_pp0_iter103, ap_enable_reg_pp0_iter104, ap_enable_reg_pp0_iter105, ap_enable_reg_pp0_iter106, ap_enable_reg_pp0_iter107, ap_enable_reg_pp0_iter108)
    begin
        if (((ap_enable_reg_pp0_iter108 = ap_const_logic_0) and (ap_enable_reg_pp0_iter107 = ap_const_logic_0) and (ap_enable_reg_pp0_iter106 = ap_const_logic_0) and (ap_enable_reg_pp0_iter105 = ap_const_logic_0) and (ap_enable_reg_pp0_iter104 = ap_const_logic_0) and (ap_enable_reg_pp0_iter103 = ap_const_logic_0) and (ap_enable_reg_pp0_iter102 = ap_const_logic_0) and (ap_enable_reg_pp0_iter101 = ap_const_logic_0) and (ap_enable_reg_pp0_iter100 = ap_const_logic_0) and (ap_enable_reg_pp0_iter99 = ap_const_logic_0) and (ap_enable_reg_pp0_iter98 = ap_const_logic_0) and (ap_enable_reg_pp0_iter97 = ap_const_logic_0) and (ap_enable_reg_pp0_iter96 = ap_const_logic_0) and (ap_enable_reg_pp0_iter95 = ap_const_logic_0) and (ap_enable_reg_pp0_iter94 = ap_const_logic_0) and (ap_enable_reg_pp0_iter93 = ap_const_logic_0) and (ap_enable_reg_pp0_iter92 = ap_const_logic_0) and (ap_enable_reg_pp0_iter91 = ap_const_logic_0) and (ap_enable_reg_pp0_iter90 = ap_const_logic_0) and (ap_enable_reg_pp0_iter89 = ap_const_logic_0) and (ap_enable_reg_pp0_iter88 = ap_const_logic_0) and (ap_enable_reg_pp0_iter87 = ap_const_logic_0) and (ap_enable_reg_pp0_iter86 = ap_const_logic_0) and (ap_enable_reg_pp0_iter85 = ap_const_logic_0) and (ap_enable_reg_pp0_iter84 = ap_const_logic_0) and (ap_enable_reg_pp0_iter83 = ap_const_logic_0) and (ap_enable_reg_pp0_iter82 = ap_const_logic_0) and (ap_enable_reg_pp0_iter81 = ap_const_logic_0) and (ap_enable_reg_pp0_iter80 = ap_const_logic_0) and (ap_enable_reg_pp0_iter79 = ap_const_logic_0) and (ap_enable_reg_pp0_iter78 = ap_const_logic_0) and (ap_enable_reg_pp0_iter77 = ap_const_logic_0) and (ap_enable_reg_pp0_iter76 = ap_const_logic_0) and (ap_enable_reg_pp0_iter75 = ap_const_logic_0) and (ap_enable_reg_pp0_iter74 = ap_const_logic_0) and (ap_enable_reg_pp0_iter73 = ap_const_logic_0) and (ap_enable_reg_pp0_iter72 = ap_const_logic_0) and (ap_enable_reg_pp0_iter71 = ap_const_logic_0) and (ap_enable_reg_pp0_iter70 = ap_const_logic_0) and (ap_enable_reg_pp0_iter69 = ap_const_logic_0) and (ap_enable_reg_pp0_iter68 = ap_const_logic_0) and (ap_enable_reg_pp0_iter67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter66 = ap_const_logic_0) and (ap_enable_reg_pp0_iter65 = ap_const_logic_0) and (ap_enable_reg_pp0_iter64 = ap_const_logic_0) and (ap_enable_reg_pp0_iter63 = ap_const_logic_0) and (ap_enable_reg_pp0_iter62 = ap_const_logic_0) and (ap_enable_reg_pp0_iter61 = ap_const_logic_0) and (ap_enable_reg_pp0_iter60 = ap_const_logic_0) and (ap_enable_reg_pp0_iter59 = ap_const_logic_0) and (ap_enable_reg_pp0_iter58 = ap_const_logic_0) and (ap_enable_reg_pp0_iter57 = ap_const_logic_0) and (ap_enable_reg_pp0_iter56 = ap_const_logic_0) and (ap_enable_reg_pp0_iter55 = ap_const_logic_0) and (ap_enable_reg_pp0_iter54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state116)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state116)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln621_1_fu_641_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_802_pp0_iter106_reg),to_integer(unsigned('0' & zext_ln621_1_fu_638_p1(31-1 downto 0)))));
    ashr_ln621_fu_594_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_761_pp0_iter106_reg),to_integer(unsigned('0' & zext_ln621_fu_591_p1(31-1 downto 0)))));
    bitcast_ln29_1_fu_242_p1 <= xor_ln29_fu_236_p2;
    bitcast_ln29_fu_232_p1 <= grp_fu_177_p2;
    exp_tmp_1_fu_375_p4 <= ireg_1_fu_360_p1(62 downto 52);
    exp_tmp_fu_268_p4 <= ireg_fu_253_p1(62 downto 52);
    fft_size_cast_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fft_size),32));

    grp_fu_181_p0_assign_proc : process(ap_CS_fsm_state1, fft_size_cast_fu_184_p1, ap_CS_fsm_pp0_stage0, zext_ln28_fu_222_p1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_181_p0 <= zext_ln28_fu_222_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            grp_fu_181_p0 <= fft_size_cast_fu_184_p1;
        else 
            grp_fu_181_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_double_s_fu_134_ap_start <= grp_sin_or_cos_double_s_fu_134_ap_start_reg;
    grp_sin_or_cos_double_s_fu_153_ap_start <= grp_sin_or_cos_double_s_fu_153_ap_start_reg;
    i_cast_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_717_pp0_iter107_reg),64));
    icmp_ln27_fu_207_p2 <= "1" when (i_fu_92 = p_lshr_f_cast_reg_702) else "0";
    icmp_ln606_1_fu_419_p2 <= "1" when (trunc_ln590_1_fu_363_p1 = ap_const_lv63_0) else "0";
    icmp_ln606_fu_312_p2 <= "1" when (trunc_ln590_fu_256_p1 = ap_const_lv63_0) else "0";
    icmp_ln616_1_fu_431_p2 <= "1" when (signed(F2_1_fu_425_p2) > signed(ap_const_lv12_16)) else "0";
    icmp_ln616_fu_324_p2 <= "1" when (signed(F2_fu_318_p2) > signed(ap_const_lv12_16)) else "0";
    icmp_ln617_1_fu_457_p2 <= "1" when (F2_1_fu_425_p2 = ap_const_lv12_16) else "0";
    icmp_ln617_fu_350_p2 <= "1" when (F2_fu_318_p2 = ap_const_lv12_16) else "0";
    icmp_ln620_1_fu_532_p2 <= "1" when (unsigned(sh_amt_1_reg_819) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln620_fu_470_p2 <= "1" when (unsigned(sh_amt_reg_778) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln638_1_fu_537_p2 <= "1" when (unsigned(sh_amt_1_reg_819) < unsigned(ap_const_lv12_18)) else "0";
    icmp_ln638_fu_475_p2 <= "1" when (unsigned(sh_amt_reg_778) < unsigned(ap_const_lv12_18)) else "0";
    ireg_1_fu_360_p1 <= LD_1_reg_751;
    ireg_fu_253_p1 <= LD_reg_746;
    man_V_1_fu_298_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_fu_294_p1));
    man_V_2_fu_304_p3 <= 
        man_V_1_fu_298_p2 when (p_Result_s_fu_260_p3(0) = '1') else 
        zext_ln604_fu_294_p1;
    man_V_4_fu_405_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln604_1_fu_401_p1));
    man_V_5_fu_411_p3 <= 
        man_V_4_fu_405_p2 when (p_Result_20_fu_367_p3(0) = '1') else 
        zext_ln604_1_fu_401_p1;
    or_ln617_1_fu_576_p2 <= (icmp_ln617_1_reg_826 or icmp_ln606_1_reg_807);
    or_ln617_fu_514_p2 <= (icmp_ln617_reg_785 or icmp_ln606_reg_766);
    p_Result_19_fu_286_p3 <= (ap_const_lv1_1 & trunc_ln600_fu_282_p1);
    p_Result_20_fu_367_p3 <= ireg_1_fu_360_p1(63 downto 63);
    p_Result_21_fu_393_p3 <= (ap_const_lv1_1 & trunc_ln600_1_fu_389_p1);
    p_Result_s_fu_260_p3 <= ireg_fu_253_p1(63 downto 63);
    select_ln606_1_fu_678_p3 <= 
        ap_const_lv24_0 when (icmp_ln606_1_reg_807_pp0_iter106_reg(0) = '1') else 
        select_ln616_2_fu_672_p3;
    select_ln606_fu_631_p3 <= 
        ap_const_lv24_0 when (icmp_ln606_reg_766_pp0_iter106_reg(0) = '1') else 
        select_ln616_fu_625_p3;
    select_ln616_2_fu_672_p3 <= 
        select_ln620_1_fu_665_p3 when (and_ln616_1_reg_873(0) = '1') else 
        select_ln617_1_reg_868;
    select_ln616_fu_625_p3 <= 
        select_ln620_fu_618_p3 when (and_ln616_reg_853(0) = '1') else 
        select_ln617_reg_848;
    select_ln617_1_fu_569_p3 <= 
        trunc_ln618_1_reg_832 when (and_ln617_1_fu_564_p2(0) = '1') else 
        select_ln638_1_fu_551_p3;
    select_ln617_fu_507_p3 <= 
        trunc_ln618_reg_791 when (and_ln617_fu_502_p2(0) = '1') else 
        select_ln638_fu_489_p3;
    select_ln620_1_fu_665_p3 <= 
        trunc_ln621_1_fu_646_p1 when (icmp_ln620_1_reg_863(0) = '1') else 
        select_ln623_1_fu_657_p3;
    select_ln620_fu_618_p3 <= 
        trunc_ln621_fu_599_p1 when (icmp_ln620_reg_843(0) = '1') else 
        select_ln623_fu_610_p3;
    select_ln623_1_fu_657_p3 <= 
        ap_const_lv24_FFFFFF when (tmp_18_fu_650_p3(0) = '1') else 
        ap_const_lv24_0;
    select_ln623_fu_610_p3 <= 
        ap_const_lv24_FFFFFF when (tmp_fu_603_p3(0) = '1') else 
        ap_const_lv24_0;
    select_ln638_1_fu_551_p3 <= 
        shl_ln639_1_fu_546_p2 when (icmp_ln638_1_fu_537_p2(0) = '1') else 
        ap_const_lv24_0;
    select_ln638_fu_489_p3 <= 
        shl_ln639_fu_484_p2 when (icmp_ln638_fu_475_p2(0) = '1') else 
        ap_const_lv24_0;
        sext_ln616_1_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_819),32));

    sext_ln616_1cast_fu_542_p1 <= sext_ln616_1_fu_529_p1(24 - 1 downto 0);
        sext_ln616_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_778),32));

    sext_ln616cast_fu_480_p1 <= sext_ln616_fu_467_p1(24 - 1 downto 0);
    sh_amt_1_fu_449_p3 <= 
        add_ln616_1_fu_437_p2 when (icmp_ln616_1_fu_431_p2(0) = '1') else 
        sub_ln616_1_fu_443_p2;
    sh_amt_fu_342_p3 <= 
        add_ln616_fu_330_p2 when (icmp_ln616_fu_324_p2(0) = '1') else 
        sub_ln616_fu_336_p2;
    shl_ln639_1_fu_546_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln618_1_reg_832),to_integer(unsigned('0' & sext_ln616_1cast_fu_542_p1(24-1 downto 0)))));
    shl_ln639_fu_484_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln618_reg_791),to_integer(unsigned('0' & sext_ln616cast_fu_480_p1(24-1 downto 0)))));
    sub_ln616_1_fu_443_p2 <= std_logic_vector(unsigned(ap_const_lv12_16) - unsigned(F2_1_fu_425_p2));
    sub_ln616_fu_336_p2 <= std_logic_vector(unsigned(ap_const_lv12_16) - unsigned(F2_fu_318_p2));
    tmp_18_fu_650_p3 <= ireg_1_reg_797_pp0_iter106_reg(63 downto 63);
    tmp_fu_603_p3 <= ireg_reg_756_pp0_iter106_reg(63 downto 63);
    trunc_ln28_fu_218_p1 <= i_fu_92(9 - 1 downto 0);
    trunc_ln590_1_fu_363_p1 <= ireg_1_fu_360_p1(63 - 1 downto 0);
    trunc_ln590_fu_256_p1 <= ireg_fu_253_p1(63 - 1 downto 0);
    trunc_ln600_1_fu_389_p1 <= ireg_1_fu_360_p1(52 - 1 downto 0);
    trunc_ln600_fu_282_p1 <= ireg_fu_253_p1(52 - 1 downto 0);
    trunc_ln618_1_fu_463_p1 <= man_V_5_fu_411_p3(24 - 1 downto 0);
    trunc_ln618_fu_356_p1 <= man_V_2_fu_304_p3(24 - 1 downto 0);
    trunc_ln621_1_fu_646_p1 <= ashr_ln621_1_fu_641_p2(24 - 1 downto 0);
    trunc_ln621_fu_599_p1 <= ashr_ln621_fu_594_p2(24 - 1 downto 0);
    twiddle_im_V_address0 <= i_cast_fu_685_p1(9 - 1 downto 0);

    twiddle_im_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter108)
    begin
        if (((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twiddle_im_V_ce0 <= ap_const_logic_1;
        else 
            twiddle_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twiddle_im_V_d0 <= select_ln606_1_reg_883;

    twiddle_im_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter108)
    begin
        if (((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twiddle_im_V_we0 <= ap_const_logic_1;
        else 
            twiddle_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    twiddle_re_V_address0 <= i_cast_fu_685_p1(9 - 1 downto 0);

    twiddle_re_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter108)
    begin
        if (((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twiddle_re_V_ce0 <= ap_const_logic_1;
        else 
            twiddle_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twiddle_re_V_d0 <= select_ln606_reg_878;

    twiddle_re_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter108)
    begin
        if (((ap_enable_reg_pp0_iter108 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twiddle_re_V_we0 <= ap_const_logic_1;
        else 
            twiddle_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln29_fu_236_p2 <= (bitcast_ln29_fu_232_p1 xor ap_const_lv64_8000000000000000);
    xor_ln606_1_fu_559_p2 <= (icmp_ln606_1_reg_807 xor ap_const_lv1_1);
    xor_ln606_fu_497_p2 <= (icmp_ln606_reg_766 xor ap_const_lv1_1);
    xor_ln617_1_fu_580_p2 <= (or_ln617_1_fu_576_p2 xor ap_const_lv1_1);
    xor_ln617_fu_518_p2 <= (or_ln617_fu_514_p2 xor ap_const_lv1_1);
    zext_ln28_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln28_fu_218_p1),32));
    zext_ln501_1_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_1_fu_375_p4),12));
    zext_ln501_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_268_p4),12));
    zext_ln604_1_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_fu_393_p3),54));
    zext_ln604_fu_294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_19_fu_286_p3),54));
    zext_ln621_1_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln616_1_reg_858),54));
    zext_ln621_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln616_reg_838),54));
end behav;
