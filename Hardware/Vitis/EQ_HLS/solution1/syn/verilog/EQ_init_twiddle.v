// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module EQ_init_twiddle (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fft_size,
        inverse,
        twiddle_re_V_address0,
        twiddle_re_V_ce0,
        twiddle_re_V_we0,
        twiddle_re_V_d0,
        twiddle_im_V_address0,
        twiddle_im_V_ce0,
        twiddle_im_V_we0,
        twiddle_im_V_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state116 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [10:0] fft_size;
input   inverse;
output  [8:0] twiddle_re_V_address0;
output   twiddle_re_V_ce0;
output   twiddle_re_V_we0;
output  [23:0] twiddle_re_V_d0;
output  [8:0] twiddle_im_V_address0;
output   twiddle_im_V_ce0;
output   twiddle_im_V_we0;
output  [23:0] twiddle_im_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg twiddle_re_V_ce0;
reg twiddle_re_V_we0;
reg twiddle_im_V_ce0;
reg twiddle_im_V_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] fft_size_cast_fu_184_p1;
reg   [9:0] p_lshr_f_cast_reg_702;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_181_p1;
reg   [63:0] conv1_reg_712;
reg   [9:0] i_1_reg_717;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state11_pp0_stage0_iter4;
wire    ap_block_state12_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state14_pp0_stage0_iter7;
wire    ap_block_state15_pp0_stage0_iter8;
wire    ap_block_state16_pp0_stage0_iter9;
wire    ap_block_state17_pp0_stage0_iter10;
wire    ap_block_state18_pp0_stage0_iter11;
wire    ap_block_state19_pp0_stage0_iter12;
wire    ap_block_state20_pp0_stage0_iter13;
wire    ap_block_state21_pp0_stage0_iter14;
wire    ap_block_state22_pp0_stage0_iter15;
wire    ap_block_state23_pp0_stage0_iter16;
wire    ap_block_state24_pp0_stage0_iter17;
wire    ap_block_state25_pp0_stage0_iter18;
wire    ap_block_state26_pp0_stage0_iter19;
wire    ap_block_state27_pp0_stage0_iter20;
wire    ap_block_state28_pp0_stage0_iter21;
wire    ap_block_state29_pp0_stage0_iter22;
wire    ap_block_state30_pp0_stage0_iter23;
wire    ap_block_state31_pp0_stage0_iter24;
wire    ap_block_state32_pp0_stage0_iter25;
wire    ap_block_state33_pp0_stage0_iter26;
wire    ap_block_state34_pp0_stage0_iter27;
wire    ap_block_state35_pp0_stage0_iter28;
wire    ap_block_state36_pp0_stage0_iter29;
wire    ap_block_state37_pp0_stage0_iter30;
wire    ap_block_state38_pp0_stage0_iter31;
wire    ap_block_state39_pp0_stage0_iter32;
wire    ap_block_state40_pp0_stage0_iter33;
wire    ap_block_state41_pp0_stage0_iter34;
wire    ap_block_state42_pp0_stage0_iter35;
wire    ap_block_state43_pp0_stage0_iter36;
wire    ap_block_state44_pp0_stage0_iter37;
wire    ap_block_state45_pp0_stage0_iter38;
wire    ap_block_state46_pp0_stage0_iter39;
wire    ap_block_state47_pp0_stage0_iter40;
wire    ap_block_state48_pp0_stage0_iter41;
wire    ap_block_state49_pp0_stage0_iter42;
wire    ap_block_state50_pp0_stage0_iter43;
wire    ap_block_state51_pp0_stage0_iter44;
wire    ap_block_state52_pp0_stage0_iter45;
wire    ap_block_state53_pp0_stage0_iter46;
wire    ap_block_state54_pp0_stage0_iter47;
wire    ap_block_state55_pp0_stage0_iter48;
wire    ap_block_state56_pp0_stage0_iter49;
wire    ap_block_state57_pp0_stage0_iter50;
wire    ap_block_state58_pp0_stage0_iter51;
wire    ap_block_state59_pp0_stage0_iter52;
wire    ap_block_state60_pp0_stage0_iter53;
wire    ap_block_state61_pp0_stage0_iter54;
wire    ap_block_state62_pp0_stage0_iter55;
wire    ap_block_state63_pp0_stage0_iter56;
wire    ap_block_state64_pp0_stage0_iter57;
wire    ap_block_state65_pp0_stage0_iter58;
wire    ap_block_state66_pp0_stage0_iter59;
wire    ap_block_state67_pp0_stage0_iter60;
wire    ap_block_state68_pp0_stage0_iter61;
wire    ap_block_state69_pp0_stage0_iter62;
wire    ap_block_state70_pp0_stage0_iter63;
wire    ap_block_state71_pp0_stage0_iter64;
wire    ap_block_state72_pp0_stage0_iter65;
wire    ap_block_state73_pp0_stage0_iter66;
wire    ap_block_state74_pp0_stage0_iter67;
wire    ap_block_state75_pp0_stage0_iter68;
wire    ap_block_state76_pp0_stage0_iter69;
wire    ap_block_state77_pp0_stage0_iter70;
wire    ap_block_state78_pp0_stage0_iter71;
wire    ap_block_state79_pp0_stage0_iter72;
wire    ap_block_state80_pp0_stage0_iter73;
wire    ap_block_state81_pp0_stage0_iter74;
wire    ap_block_state82_pp0_stage0_iter75;
wire    ap_block_state83_pp0_stage0_iter76;
wire    ap_block_state84_pp0_stage0_iter77;
wire    ap_block_state85_pp0_stage0_iter78;
wire    ap_block_state86_pp0_stage0_iter79;
wire    ap_block_state87_pp0_stage0_iter80;
wire    ap_block_state88_pp0_stage0_iter81;
wire    ap_block_state89_pp0_stage0_iter82;
wire    ap_block_state90_pp0_stage0_iter83;
wire    ap_block_state91_pp0_stage0_iter84;
wire    ap_block_state92_pp0_stage0_iter85;
wire    ap_block_state93_pp0_stage0_iter86;
wire    ap_block_state94_pp0_stage0_iter87;
wire    ap_block_state95_pp0_stage0_iter88;
wire    ap_block_state96_pp0_stage0_iter89;
wire    ap_block_state97_pp0_stage0_iter90;
wire    ap_block_state98_pp0_stage0_iter91;
wire    ap_block_state99_pp0_stage0_iter92;
wire    ap_block_state100_pp0_stage0_iter93;
wire    ap_block_state101_pp0_stage0_iter94;
wire    ap_block_state102_pp0_stage0_iter95;
wire    ap_block_state103_pp0_stage0_iter96;
wire    ap_block_state104_pp0_stage0_iter97;
wire    ap_block_state105_pp0_stage0_iter98;
wire    ap_block_state106_pp0_stage0_iter99;
wire    ap_block_state107_pp0_stage0_iter100;
wire    ap_block_state108_pp0_stage0_iter101;
wire    ap_block_state109_pp0_stage0_iter102;
wire    ap_block_state110_pp0_stage0_iter103;
wire    ap_block_state111_pp0_stage0_iter104;
wire    ap_block_state112_pp0_stage0_iter105;
wire    ap_block_state113_pp0_stage0_iter106;
wire    ap_block_state114_pp0_stage0_iter107;
wire    ap_block_state115_pp0_stage0_iter108;
wire    ap_block_pp0_stage0_11001;
reg   [9:0] i_1_reg_717_pp0_iter1_reg;
reg   [9:0] i_1_reg_717_pp0_iter2_reg;
reg   [9:0] i_1_reg_717_pp0_iter3_reg;
reg   [9:0] i_1_reg_717_pp0_iter4_reg;
reg   [9:0] i_1_reg_717_pp0_iter5_reg;
reg   [9:0] i_1_reg_717_pp0_iter6_reg;
reg   [9:0] i_1_reg_717_pp0_iter7_reg;
reg   [9:0] i_1_reg_717_pp0_iter8_reg;
reg   [9:0] i_1_reg_717_pp0_iter9_reg;
reg   [9:0] i_1_reg_717_pp0_iter10_reg;
reg   [9:0] i_1_reg_717_pp0_iter11_reg;
reg   [9:0] i_1_reg_717_pp0_iter12_reg;
reg   [9:0] i_1_reg_717_pp0_iter13_reg;
reg   [9:0] i_1_reg_717_pp0_iter14_reg;
reg   [9:0] i_1_reg_717_pp0_iter15_reg;
reg   [9:0] i_1_reg_717_pp0_iter16_reg;
reg   [9:0] i_1_reg_717_pp0_iter17_reg;
reg   [9:0] i_1_reg_717_pp0_iter18_reg;
reg   [9:0] i_1_reg_717_pp0_iter19_reg;
reg   [9:0] i_1_reg_717_pp0_iter20_reg;
reg   [9:0] i_1_reg_717_pp0_iter21_reg;
reg   [9:0] i_1_reg_717_pp0_iter22_reg;
reg   [9:0] i_1_reg_717_pp0_iter23_reg;
reg   [9:0] i_1_reg_717_pp0_iter24_reg;
reg   [9:0] i_1_reg_717_pp0_iter25_reg;
reg   [9:0] i_1_reg_717_pp0_iter26_reg;
reg   [9:0] i_1_reg_717_pp0_iter27_reg;
reg   [9:0] i_1_reg_717_pp0_iter28_reg;
reg   [9:0] i_1_reg_717_pp0_iter29_reg;
reg   [9:0] i_1_reg_717_pp0_iter30_reg;
reg   [9:0] i_1_reg_717_pp0_iter31_reg;
reg   [9:0] i_1_reg_717_pp0_iter32_reg;
reg   [9:0] i_1_reg_717_pp0_iter33_reg;
reg   [9:0] i_1_reg_717_pp0_iter34_reg;
reg   [9:0] i_1_reg_717_pp0_iter35_reg;
reg   [9:0] i_1_reg_717_pp0_iter36_reg;
reg   [9:0] i_1_reg_717_pp0_iter37_reg;
reg   [9:0] i_1_reg_717_pp0_iter38_reg;
reg   [9:0] i_1_reg_717_pp0_iter39_reg;
reg   [9:0] i_1_reg_717_pp0_iter40_reg;
reg   [9:0] i_1_reg_717_pp0_iter41_reg;
reg   [9:0] i_1_reg_717_pp0_iter42_reg;
reg   [9:0] i_1_reg_717_pp0_iter43_reg;
reg   [9:0] i_1_reg_717_pp0_iter44_reg;
reg   [9:0] i_1_reg_717_pp0_iter45_reg;
reg   [9:0] i_1_reg_717_pp0_iter46_reg;
reg   [9:0] i_1_reg_717_pp0_iter47_reg;
reg   [9:0] i_1_reg_717_pp0_iter48_reg;
reg   [9:0] i_1_reg_717_pp0_iter49_reg;
reg   [9:0] i_1_reg_717_pp0_iter50_reg;
reg   [9:0] i_1_reg_717_pp0_iter51_reg;
reg   [9:0] i_1_reg_717_pp0_iter52_reg;
reg   [9:0] i_1_reg_717_pp0_iter53_reg;
reg   [9:0] i_1_reg_717_pp0_iter54_reg;
reg   [9:0] i_1_reg_717_pp0_iter55_reg;
reg   [9:0] i_1_reg_717_pp0_iter56_reg;
reg   [9:0] i_1_reg_717_pp0_iter57_reg;
reg   [9:0] i_1_reg_717_pp0_iter58_reg;
reg   [9:0] i_1_reg_717_pp0_iter59_reg;
reg   [9:0] i_1_reg_717_pp0_iter60_reg;
reg   [9:0] i_1_reg_717_pp0_iter61_reg;
reg   [9:0] i_1_reg_717_pp0_iter62_reg;
reg   [9:0] i_1_reg_717_pp0_iter63_reg;
reg   [9:0] i_1_reg_717_pp0_iter64_reg;
reg   [9:0] i_1_reg_717_pp0_iter65_reg;
reg   [9:0] i_1_reg_717_pp0_iter66_reg;
reg   [9:0] i_1_reg_717_pp0_iter67_reg;
reg   [9:0] i_1_reg_717_pp0_iter68_reg;
reg   [9:0] i_1_reg_717_pp0_iter69_reg;
reg   [9:0] i_1_reg_717_pp0_iter70_reg;
reg   [9:0] i_1_reg_717_pp0_iter71_reg;
reg   [9:0] i_1_reg_717_pp0_iter72_reg;
reg   [9:0] i_1_reg_717_pp0_iter73_reg;
reg   [9:0] i_1_reg_717_pp0_iter74_reg;
reg   [9:0] i_1_reg_717_pp0_iter75_reg;
reg   [9:0] i_1_reg_717_pp0_iter76_reg;
reg   [9:0] i_1_reg_717_pp0_iter77_reg;
reg   [9:0] i_1_reg_717_pp0_iter78_reg;
reg   [9:0] i_1_reg_717_pp0_iter79_reg;
reg   [9:0] i_1_reg_717_pp0_iter80_reg;
reg   [9:0] i_1_reg_717_pp0_iter81_reg;
reg   [9:0] i_1_reg_717_pp0_iter82_reg;
reg   [9:0] i_1_reg_717_pp0_iter83_reg;
reg   [9:0] i_1_reg_717_pp0_iter84_reg;
reg   [9:0] i_1_reg_717_pp0_iter85_reg;
reg   [9:0] i_1_reg_717_pp0_iter86_reg;
reg   [9:0] i_1_reg_717_pp0_iter87_reg;
reg   [9:0] i_1_reg_717_pp0_iter88_reg;
reg   [9:0] i_1_reg_717_pp0_iter89_reg;
reg   [9:0] i_1_reg_717_pp0_iter90_reg;
reg   [9:0] i_1_reg_717_pp0_iter91_reg;
reg   [9:0] i_1_reg_717_pp0_iter92_reg;
reg   [9:0] i_1_reg_717_pp0_iter93_reg;
reg   [9:0] i_1_reg_717_pp0_iter94_reg;
reg   [9:0] i_1_reg_717_pp0_iter95_reg;
reg   [9:0] i_1_reg_717_pp0_iter96_reg;
reg   [9:0] i_1_reg_717_pp0_iter97_reg;
reg   [9:0] i_1_reg_717_pp0_iter98_reg;
reg   [9:0] i_1_reg_717_pp0_iter99_reg;
reg   [9:0] i_1_reg_717_pp0_iter100_reg;
reg   [9:0] i_1_reg_717_pp0_iter101_reg;
reg   [9:0] i_1_reg_717_pp0_iter102_reg;
reg   [9:0] i_1_reg_717_pp0_iter103_reg;
reg   [9:0] i_1_reg_717_pp0_iter104_reg;
reg   [9:0] i_1_reg_717_pp0_iter105_reg;
reg   [9:0] i_1_reg_717_pp0_iter106_reg;
reg   [9:0] i_1_reg_717_pp0_iter107_reg;
wire   [31:0] zext_ln28_fu_222_p1;
wire   [0:0] icmp_ln27_fu_207_p2;
reg   [63:0] conv_reg_730;
reg    ap_enable_reg_pp0_iter5;
wire   [63:0] grp_fu_172_p2;
reg   [63:0] mul_reg_735;
wire   [63:0] angle_1_fu_246_p3;
reg   [63:0] angle_1_reg_740;
wire   [63:0] grp_sin_or_cos_double_s_fu_134_ap_return;
reg   [63:0] LD_reg_746;
wire   [63:0] grp_sin_or_cos_double_s_fu_153_ap_return;
reg   [63:0] LD_1_reg_751;
wire   [63:0] ireg_fu_253_p1;
reg   [63:0] ireg_reg_756;
reg   [63:0] ireg_reg_756_pp0_iter106_reg;
wire   [53:0] man_V_2_fu_304_p3;
reg   [53:0] man_V_2_reg_761;
reg   [53:0] man_V_2_reg_761_pp0_iter106_reg;
wire   [0:0] icmp_ln606_fu_312_p2;
reg   [0:0] icmp_ln606_reg_766;
reg   [0:0] icmp_ln606_reg_766_pp0_iter106_reg;
wire   [0:0] icmp_ln616_fu_324_p2;
reg   [0:0] icmp_ln616_reg_773;
wire  signed [11:0] sh_amt_fu_342_p3;
reg  signed [11:0] sh_amt_reg_778;
wire   [0:0] icmp_ln617_fu_350_p2;
reg   [0:0] icmp_ln617_reg_785;
wire   [23:0] trunc_ln618_fu_356_p1;
reg   [23:0] trunc_ln618_reg_791;
wire   [63:0] ireg_1_fu_360_p1;
reg   [63:0] ireg_1_reg_797;
reg   [63:0] ireg_1_reg_797_pp0_iter106_reg;
wire   [53:0] man_V_5_fu_411_p3;
reg   [53:0] man_V_5_reg_802;
reg   [53:0] man_V_5_reg_802_pp0_iter106_reg;
wire   [0:0] icmp_ln606_1_fu_419_p2;
reg   [0:0] icmp_ln606_1_reg_807;
reg   [0:0] icmp_ln606_1_reg_807_pp0_iter106_reg;
wire   [0:0] icmp_ln616_1_fu_431_p2;
reg   [0:0] icmp_ln616_1_reg_814;
wire  signed [11:0] sh_amt_1_fu_449_p3;
reg  signed [11:0] sh_amt_1_reg_819;
wire   [0:0] icmp_ln617_1_fu_457_p2;
reg   [0:0] icmp_ln617_1_reg_826;
wire   [23:0] trunc_ln618_1_fu_463_p1;
reg   [23:0] trunc_ln618_1_reg_832;
wire  signed [31:0] sext_ln616_fu_467_p1;
reg  signed [31:0] sext_ln616_reg_838;
wire   [0:0] icmp_ln620_fu_470_p2;
reg   [0:0] icmp_ln620_reg_843;
wire   [23:0] select_ln617_fu_507_p3;
reg   [23:0] select_ln617_reg_848;
wire   [0:0] and_ln616_fu_524_p2;
reg   [0:0] and_ln616_reg_853;
wire  signed [31:0] sext_ln616_1_fu_529_p1;
reg  signed [31:0] sext_ln616_1_reg_858;
wire   [0:0] icmp_ln620_1_fu_532_p2;
reg   [0:0] icmp_ln620_1_reg_863;
wire   [23:0] select_ln617_1_fu_569_p3;
reg   [23:0] select_ln617_1_reg_868;
wire   [0:0] and_ln616_1_fu_586_p2;
reg   [0:0] and_ln616_1_reg_873;
wire   [23:0] select_ln606_fu_631_p3;
reg   [23:0] select_ln606_reg_878;
wire   [23:0] select_ln606_1_fu_678_p3;
reg   [23:0] select_ln606_1_reg_883;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_enable_reg_pp0_iter87;
reg    ap_enable_reg_pp0_iter88;
reg    ap_enable_reg_pp0_iter89;
reg    ap_enable_reg_pp0_iter90;
reg    ap_enable_reg_pp0_iter91;
reg    ap_enable_reg_pp0_iter92;
reg    ap_enable_reg_pp0_iter93;
reg    ap_enable_reg_pp0_iter94;
reg    ap_enable_reg_pp0_iter95;
reg    ap_enable_reg_pp0_iter96;
reg    ap_enable_reg_pp0_iter97;
reg    ap_enable_reg_pp0_iter98;
reg    ap_enable_reg_pp0_iter99;
reg    ap_enable_reg_pp0_iter100;
reg    ap_enable_reg_pp0_iter101;
reg    ap_enable_reg_pp0_iter102;
reg    ap_enable_reg_pp0_iter103;
reg    ap_enable_reg_pp0_iter104;
reg    ap_enable_reg_pp0_iter105;
reg    ap_enable_reg_pp0_iter106;
reg    ap_enable_reg_pp0_iter107;
reg    ap_enable_reg_pp0_iter108;
wire    grp_sin_or_cos_double_s_fu_134_ap_start;
wire    grp_sin_or_cos_double_s_fu_134_ap_done;
wire    grp_sin_or_cos_double_s_fu_134_ap_idle;
wire    grp_sin_or_cos_double_s_fu_134_ap_ready;
wire    grp_sin_or_cos_double_s_fu_153_ap_start;
wire    grp_sin_or_cos_double_s_fu_153_ap_done;
wire    grp_sin_or_cos_double_s_fu_153_ap_idle;
wire    grp_sin_or_cos_double_s_fu_153_ap_ready;
reg    grp_sin_or_cos_double_s_fu_134_ap_start_reg;
wire    ap_block_pp0_stage0;
reg    grp_sin_or_cos_double_s_fu_153_ap_start_reg;
wire   [63:0] i_cast_fu_685_p1;
reg   [9:0] i_fu_92;
wire   [9:0] add_ln27_fu_212_p2;
reg   [31:0] grp_fu_181_p0;
wire   [8:0] trunc_ln28_fu_218_p1;
wire   [63:0] grp_fu_177_p2;
wire   [63:0] bitcast_ln29_fu_232_p1;
wire   [63:0] xor_ln29_fu_236_p2;
wire   [0:0] angle_1_fu_246_p0;
wire   [63:0] bitcast_ln29_1_fu_242_p1;
wire   [10:0] exp_tmp_fu_268_p4;
wire   [51:0] trunc_ln600_fu_282_p1;
wire   [52:0] p_Result_19_fu_286_p3;
wire   [53:0] zext_ln604_fu_294_p1;
wire   [0:0] p_Result_s_fu_260_p3;
wire   [53:0] man_V_1_fu_298_p2;
wire   [62:0] trunc_ln590_fu_256_p1;
wire   [11:0] zext_ln501_fu_278_p1;
wire   [11:0] F2_fu_318_p2;
wire   [11:0] add_ln616_fu_330_p2;
wire   [11:0] sub_ln616_fu_336_p2;
wire   [10:0] exp_tmp_1_fu_375_p4;
wire   [51:0] trunc_ln600_1_fu_389_p1;
wire   [52:0] p_Result_21_fu_393_p3;
wire   [53:0] zext_ln604_1_fu_401_p1;
wire   [0:0] p_Result_20_fu_367_p3;
wire   [53:0] man_V_4_fu_405_p2;
wire   [62:0] trunc_ln590_1_fu_363_p1;
wire   [11:0] zext_ln501_1_fu_385_p1;
wire   [11:0] F2_1_fu_425_p2;
wire   [11:0] add_ln616_1_fu_437_p2;
wire   [11:0] sub_ln616_1_fu_443_p2;
wire   [23:0] sext_ln616cast_fu_480_p1;
wire   [0:0] icmp_ln638_fu_475_p2;
wire   [23:0] shl_ln639_fu_484_p2;
wire   [0:0] xor_ln606_fu_497_p2;
wire   [0:0] and_ln617_fu_502_p2;
wire   [23:0] select_ln638_fu_489_p3;
wire   [0:0] or_ln617_fu_514_p2;
wire   [0:0] xor_ln617_fu_518_p2;
wire   [23:0] sext_ln616_1cast_fu_542_p1;
wire   [0:0] icmp_ln638_1_fu_537_p2;
wire   [23:0] shl_ln639_1_fu_546_p2;
wire   [0:0] xor_ln606_1_fu_559_p2;
wire   [0:0] and_ln617_1_fu_564_p2;
wire   [23:0] select_ln638_1_fu_551_p3;
wire   [0:0] or_ln617_1_fu_576_p2;
wire   [0:0] xor_ln617_1_fu_580_p2;
wire   [53:0] zext_ln621_fu_591_p1;
wire   [53:0] ashr_ln621_fu_594_p2;
wire   [0:0] tmp_fu_603_p3;
wire   [23:0] trunc_ln621_fu_599_p1;
wire   [23:0] select_ln623_fu_610_p3;
wire   [23:0] select_ln620_fu_618_p3;
wire   [23:0] select_ln616_fu_625_p3;
wire   [53:0] zext_ln621_1_fu_638_p1;
wire   [53:0] ashr_ln621_1_fu_641_p2;
wire   [0:0] tmp_18_fu_650_p3;
wire   [23:0] trunc_ln621_1_fu_646_p1;
wire   [23:0] select_ln623_1_fu_657_p3;
wire   [23:0] select_ln620_1_fu_665_p3;
wire   [23:0] select_ln616_2_fu_672_p3;
wire    ap_CS_fsm_state116;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state116_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_enable_reg_pp0_iter87 = 1'b0;
#0 ap_enable_reg_pp0_iter88 = 1'b0;
#0 ap_enable_reg_pp0_iter89 = 1'b0;
#0 ap_enable_reg_pp0_iter90 = 1'b0;
#0 ap_enable_reg_pp0_iter91 = 1'b0;
#0 ap_enable_reg_pp0_iter92 = 1'b0;
#0 ap_enable_reg_pp0_iter93 = 1'b0;
#0 ap_enable_reg_pp0_iter94 = 1'b0;
#0 ap_enable_reg_pp0_iter95 = 1'b0;
#0 ap_enable_reg_pp0_iter96 = 1'b0;
#0 ap_enable_reg_pp0_iter97 = 1'b0;
#0 ap_enable_reg_pp0_iter98 = 1'b0;
#0 ap_enable_reg_pp0_iter99 = 1'b0;
#0 ap_enable_reg_pp0_iter100 = 1'b0;
#0 ap_enable_reg_pp0_iter101 = 1'b0;
#0 ap_enable_reg_pp0_iter102 = 1'b0;
#0 ap_enable_reg_pp0_iter103 = 1'b0;
#0 ap_enable_reg_pp0_iter104 = 1'b0;
#0 ap_enable_reg_pp0_iter105 = 1'b0;
#0 ap_enable_reg_pp0_iter106 = 1'b0;
#0 ap_enable_reg_pp0_iter107 = 1'b0;
#0 ap_enable_reg_pp0_iter108 = 1'b0;
#0 grp_sin_or_cos_double_s_fu_134_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_double_s_fu_153_ap_start_reg = 1'b0;
end

EQ_sin_or_cos_double_s grp_sin_or_cos_double_s_fu_134(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_134_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_134_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_134_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_134_ap_ready),
    .t_in(angle_1_reg_740),
    .do_cos(1'd1),
    .ap_return(grp_sin_or_cos_double_s_fu_134_ap_return)
);

EQ_sin_or_cos_double_s grp_sin_or_cos_double_s_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_153_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_153_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_153_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_153_ap_ready),
    .t_in(angle_1_reg_740),
    .do_cos(1'd0),
    .ap_return(grp_sin_or_cos_double_s_fu_153_ap_return)
);

EQ_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_730),
    .din1(64'd4618760256179416344),
    .ce(1'b1),
    .dout(grp_fu_172_p2)
);

EQ_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_735),
    .din1(conv1_reg_712),
    .ce(1'b1),
    .dout(grp_fu_177_p2)
);

EQ_sitodp_32ns_64_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_6_no_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_181_p0),
    .ce(1'b1),
    .dout(grp_fu_181_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state7) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter100 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter100 <= ap_enable_reg_pp0_iter99;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter101 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter101 <= ap_enable_reg_pp0_iter100;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter102 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter102 <= ap_enable_reg_pp0_iter101;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter103 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter103 <= ap_enable_reg_pp0_iter102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter104 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter104 <= ap_enable_reg_pp0_iter103;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter105 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter105 <= ap_enable_reg_pp0_iter104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter106 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter106 <= ap_enable_reg_pp0_iter105;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter107 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter107 <= ap_enable_reg_pp0_iter106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter108 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter108 <= ap_enable_reg_pp0_iter107;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter108 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter87 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter88 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter89 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter90 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter91 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter92 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter93 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter94 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter95 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter96 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter97 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter97 <= ap_enable_reg_pp0_iter96;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter98 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter98 <= ap_enable_reg_pp0_iter97;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter99 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter99 <= ap_enable_reg_pp0_iter98;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_134_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter71 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_134_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_134_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_134_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_double_s_fu_153_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter71 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            grp_sin_or_cos_double_s_fu_153_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_double_s_fu_153_ap_ready == 1'b1)) begin
            grp_sin_or_cos_double_s_fu_153_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_fu_92 <= 10'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_207_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_92 <= add_ln27_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        LD_1_reg_751 <= grp_sin_or_cos_double_s_fu_153_ap_return;
        LD_reg_746 <= grp_sin_or_cos_double_s_fu_134_ap_return;
        angle_1_reg_740 <= angle_1_fu_246_p3;
        i_1_reg_717_pp0_iter100_reg <= i_1_reg_717_pp0_iter99_reg;
        i_1_reg_717_pp0_iter101_reg <= i_1_reg_717_pp0_iter100_reg;
        i_1_reg_717_pp0_iter102_reg <= i_1_reg_717_pp0_iter101_reg;
        i_1_reg_717_pp0_iter103_reg <= i_1_reg_717_pp0_iter102_reg;
        i_1_reg_717_pp0_iter104_reg <= i_1_reg_717_pp0_iter103_reg;
        i_1_reg_717_pp0_iter105_reg <= i_1_reg_717_pp0_iter104_reg;
        i_1_reg_717_pp0_iter106_reg <= i_1_reg_717_pp0_iter105_reg;
        i_1_reg_717_pp0_iter107_reg <= i_1_reg_717_pp0_iter106_reg;
        i_1_reg_717_pp0_iter10_reg <= i_1_reg_717_pp0_iter9_reg;
        i_1_reg_717_pp0_iter11_reg <= i_1_reg_717_pp0_iter10_reg;
        i_1_reg_717_pp0_iter12_reg <= i_1_reg_717_pp0_iter11_reg;
        i_1_reg_717_pp0_iter13_reg <= i_1_reg_717_pp0_iter12_reg;
        i_1_reg_717_pp0_iter14_reg <= i_1_reg_717_pp0_iter13_reg;
        i_1_reg_717_pp0_iter15_reg <= i_1_reg_717_pp0_iter14_reg;
        i_1_reg_717_pp0_iter16_reg <= i_1_reg_717_pp0_iter15_reg;
        i_1_reg_717_pp0_iter17_reg <= i_1_reg_717_pp0_iter16_reg;
        i_1_reg_717_pp0_iter18_reg <= i_1_reg_717_pp0_iter17_reg;
        i_1_reg_717_pp0_iter19_reg <= i_1_reg_717_pp0_iter18_reg;
        i_1_reg_717_pp0_iter20_reg <= i_1_reg_717_pp0_iter19_reg;
        i_1_reg_717_pp0_iter21_reg <= i_1_reg_717_pp0_iter20_reg;
        i_1_reg_717_pp0_iter22_reg <= i_1_reg_717_pp0_iter21_reg;
        i_1_reg_717_pp0_iter23_reg <= i_1_reg_717_pp0_iter22_reg;
        i_1_reg_717_pp0_iter24_reg <= i_1_reg_717_pp0_iter23_reg;
        i_1_reg_717_pp0_iter25_reg <= i_1_reg_717_pp0_iter24_reg;
        i_1_reg_717_pp0_iter26_reg <= i_1_reg_717_pp0_iter25_reg;
        i_1_reg_717_pp0_iter27_reg <= i_1_reg_717_pp0_iter26_reg;
        i_1_reg_717_pp0_iter28_reg <= i_1_reg_717_pp0_iter27_reg;
        i_1_reg_717_pp0_iter29_reg <= i_1_reg_717_pp0_iter28_reg;
        i_1_reg_717_pp0_iter2_reg <= i_1_reg_717_pp0_iter1_reg;
        i_1_reg_717_pp0_iter30_reg <= i_1_reg_717_pp0_iter29_reg;
        i_1_reg_717_pp0_iter31_reg <= i_1_reg_717_pp0_iter30_reg;
        i_1_reg_717_pp0_iter32_reg <= i_1_reg_717_pp0_iter31_reg;
        i_1_reg_717_pp0_iter33_reg <= i_1_reg_717_pp0_iter32_reg;
        i_1_reg_717_pp0_iter34_reg <= i_1_reg_717_pp0_iter33_reg;
        i_1_reg_717_pp0_iter35_reg <= i_1_reg_717_pp0_iter34_reg;
        i_1_reg_717_pp0_iter36_reg <= i_1_reg_717_pp0_iter35_reg;
        i_1_reg_717_pp0_iter37_reg <= i_1_reg_717_pp0_iter36_reg;
        i_1_reg_717_pp0_iter38_reg <= i_1_reg_717_pp0_iter37_reg;
        i_1_reg_717_pp0_iter39_reg <= i_1_reg_717_pp0_iter38_reg;
        i_1_reg_717_pp0_iter3_reg <= i_1_reg_717_pp0_iter2_reg;
        i_1_reg_717_pp0_iter40_reg <= i_1_reg_717_pp0_iter39_reg;
        i_1_reg_717_pp0_iter41_reg <= i_1_reg_717_pp0_iter40_reg;
        i_1_reg_717_pp0_iter42_reg <= i_1_reg_717_pp0_iter41_reg;
        i_1_reg_717_pp0_iter43_reg <= i_1_reg_717_pp0_iter42_reg;
        i_1_reg_717_pp0_iter44_reg <= i_1_reg_717_pp0_iter43_reg;
        i_1_reg_717_pp0_iter45_reg <= i_1_reg_717_pp0_iter44_reg;
        i_1_reg_717_pp0_iter46_reg <= i_1_reg_717_pp0_iter45_reg;
        i_1_reg_717_pp0_iter47_reg <= i_1_reg_717_pp0_iter46_reg;
        i_1_reg_717_pp0_iter48_reg <= i_1_reg_717_pp0_iter47_reg;
        i_1_reg_717_pp0_iter49_reg <= i_1_reg_717_pp0_iter48_reg;
        i_1_reg_717_pp0_iter4_reg <= i_1_reg_717_pp0_iter3_reg;
        i_1_reg_717_pp0_iter50_reg <= i_1_reg_717_pp0_iter49_reg;
        i_1_reg_717_pp0_iter51_reg <= i_1_reg_717_pp0_iter50_reg;
        i_1_reg_717_pp0_iter52_reg <= i_1_reg_717_pp0_iter51_reg;
        i_1_reg_717_pp0_iter53_reg <= i_1_reg_717_pp0_iter52_reg;
        i_1_reg_717_pp0_iter54_reg <= i_1_reg_717_pp0_iter53_reg;
        i_1_reg_717_pp0_iter55_reg <= i_1_reg_717_pp0_iter54_reg;
        i_1_reg_717_pp0_iter56_reg <= i_1_reg_717_pp0_iter55_reg;
        i_1_reg_717_pp0_iter57_reg <= i_1_reg_717_pp0_iter56_reg;
        i_1_reg_717_pp0_iter58_reg <= i_1_reg_717_pp0_iter57_reg;
        i_1_reg_717_pp0_iter59_reg <= i_1_reg_717_pp0_iter58_reg;
        i_1_reg_717_pp0_iter5_reg <= i_1_reg_717_pp0_iter4_reg;
        i_1_reg_717_pp0_iter60_reg <= i_1_reg_717_pp0_iter59_reg;
        i_1_reg_717_pp0_iter61_reg <= i_1_reg_717_pp0_iter60_reg;
        i_1_reg_717_pp0_iter62_reg <= i_1_reg_717_pp0_iter61_reg;
        i_1_reg_717_pp0_iter63_reg <= i_1_reg_717_pp0_iter62_reg;
        i_1_reg_717_pp0_iter64_reg <= i_1_reg_717_pp0_iter63_reg;
        i_1_reg_717_pp0_iter65_reg <= i_1_reg_717_pp0_iter64_reg;
        i_1_reg_717_pp0_iter66_reg <= i_1_reg_717_pp0_iter65_reg;
        i_1_reg_717_pp0_iter67_reg <= i_1_reg_717_pp0_iter66_reg;
        i_1_reg_717_pp0_iter68_reg <= i_1_reg_717_pp0_iter67_reg;
        i_1_reg_717_pp0_iter69_reg <= i_1_reg_717_pp0_iter68_reg;
        i_1_reg_717_pp0_iter6_reg <= i_1_reg_717_pp0_iter5_reg;
        i_1_reg_717_pp0_iter70_reg <= i_1_reg_717_pp0_iter69_reg;
        i_1_reg_717_pp0_iter71_reg <= i_1_reg_717_pp0_iter70_reg;
        i_1_reg_717_pp0_iter72_reg <= i_1_reg_717_pp0_iter71_reg;
        i_1_reg_717_pp0_iter73_reg <= i_1_reg_717_pp0_iter72_reg;
        i_1_reg_717_pp0_iter74_reg <= i_1_reg_717_pp0_iter73_reg;
        i_1_reg_717_pp0_iter75_reg <= i_1_reg_717_pp0_iter74_reg;
        i_1_reg_717_pp0_iter76_reg <= i_1_reg_717_pp0_iter75_reg;
        i_1_reg_717_pp0_iter77_reg <= i_1_reg_717_pp0_iter76_reg;
        i_1_reg_717_pp0_iter78_reg <= i_1_reg_717_pp0_iter77_reg;
        i_1_reg_717_pp0_iter79_reg <= i_1_reg_717_pp0_iter78_reg;
        i_1_reg_717_pp0_iter7_reg <= i_1_reg_717_pp0_iter6_reg;
        i_1_reg_717_pp0_iter80_reg <= i_1_reg_717_pp0_iter79_reg;
        i_1_reg_717_pp0_iter81_reg <= i_1_reg_717_pp0_iter80_reg;
        i_1_reg_717_pp0_iter82_reg <= i_1_reg_717_pp0_iter81_reg;
        i_1_reg_717_pp0_iter83_reg <= i_1_reg_717_pp0_iter82_reg;
        i_1_reg_717_pp0_iter84_reg <= i_1_reg_717_pp0_iter83_reg;
        i_1_reg_717_pp0_iter85_reg <= i_1_reg_717_pp0_iter84_reg;
        i_1_reg_717_pp0_iter86_reg <= i_1_reg_717_pp0_iter85_reg;
        i_1_reg_717_pp0_iter87_reg <= i_1_reg_717_pp0_iter86_reg;
        i_1_reg_717_pp0_iter88_reg <= i_1_reg_717_pp0_iter87_reg;
        i_1_reg_717_pp0_iter89_reg <= i_1_reg_717_pp0_iter88_reg;
        i_1_reg_717_pp0_iter8_reg <= i_1_reg_717_pp0_iter7_reg;
        i_1_reg_717_pp0_iter90_reg <= i_1_reg_717_pp0_iter89_reg;
        i_1_reg_717_pp0_iter91_reg <= i_1_reg_717_pp0_iter90_reg;
        i_1_reg_717_pp0_iter92_reg <= i_1_reg_717_pp0_iter91_reg;
        i_1_reg_717_pp0_iter93_reg <= i_1_reg_717_pp0_iter92_reg;
        i_1_reg_717_pp0_iter94_reg <= i_1_reg_717_pp0_iter93_reg;
        i_1_reg_717_pp0_iter95_reg <= i_1_reg_717_pp0_iter94_reg;
        i_1_reg_717_pp0_iter96_reg <= i_1_reg_717_pp0_iter95_reg;
        i_1_reg_717_pp0_iter97_reg <= i_1_reg_717_pp0_iter96_reg;
        i_1_reg_717_pp0_iter98_reg <= i_1_reg_717_pp0_iter97_reg;
        i_1_reg_717_pp0_iter99_reg <= i_1_reg_717_pp0_iter98_reg;
        i_1_reg_717_pp0_iter9_reg <= i_1_reg_717_pp0_iter8_reg;
        icmp_ln606_1_reg_807 <= icmp_ln606_1_fu_419_p2;
        icmp_ln606_1_reg_807_pp0_iter106_reg <= icmp_ln606_1_reg_807;
        icmp_ln606_reg_766 <= icmp_ln606_fu_312_p2;
        icmp_ln606_reg_766_pp0_iter106_reg <= icmp_ln606_reg_766;
        icmp_ln616_1_reg_814 <= icmp_ln616_1_fu_431_p2;
        icmp_ln616_reg_773 <= icmp_ln616_fu_324_p2;
        icmp_ln617_1_reg_826 <= icmp_ln617_1_fu_457_p2;
        icmp_ln617_reg_785 <= icmp_ln617_fu_350_p2;
        ireg_1_reg_797 <= ireg_1_fu_360_p1;
        ireg_1_reg_797_pp0_iter106_reg <= ireg_1_reg_797;
        ireg_reg_756 <= ireg_fu_253_p1;
        ireg_reg_756_pp0_iter106_reg <= ireg_reg_756;
        man_V_2_reg_761 <= man_V_2_fu_304_p3;
        man_V_2_reg_761_pp0_iter106_reg <= man_V_2_reg_761;
        man_V_5_reg_802 <= man_V_5_fu_411_p3;
        man_V_5_reg_802_pp0_iter106_reg <= man_V_5_reg_802;
        mul_reg_735 <= grp_fu_172_p2;
        select_ln606_1_reg_883 <= select_ln606_1_fu_678_p3;
        select_ln606_reg_878 <= select_ln606_fu_631_p3;
        sh_amt_1_reg_819 <= sh_amt_1_fu_449_p3;
        sh_amt_reg_778 <= sh_amt_fu_342_p3;
        trunc_ln618_1_reg_832 <= trunc_ln618_1_fu_463_p1;
        trunc_ln618_reg_791 <= trunc_ln618_fu_356_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_1_reg_807 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln616_1_reg_873 <= and_ln616_1_fu_586_p2;
        icmp_ln620_1_reg_863 <= icmp_ln620_1_fu_532_p2;
        select_ln617_1_reg_868 <= select_ln617_1_fu_569_p3;
        sext_ln616_1_reg_858 <= sext_ln616_1_fu_529_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln606_reg_766 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln616_reg_853 <= and_ln616_fu_524_p2;
        icmp_ln620_reg_843 <= icmp_ln620_fu_470_p2;
        select_ln617_reg_848 <= select_ln617_fu_507_p3;
        sext_ln616_reg_838 <= sext_ln616_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv1_reg_712 <= grp_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_reg_730 <= grp_fu_181_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_1_reg_717 <= i_fu_92;
        i_1_reg_717_pp0_iter1_reg <= i_1_reg_717;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        p_lshr_f_cast_reg_702 <= {{fft_size[10:1]}};
    end
end

assign ap_ST_fsm_state116_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln27_fu_207_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b0) & (ap_enable_reg_pp0_iter107 == 1'b0) & (ap_enable_reg_pp0_iter106 == 1'b0) & (ap_enable_reg_pp0_iter105 == 1'b0) & (ap_enable_reg_pp0_iter104 == 1'b0) & (ap_enable_reg_pp0_iter103 == 1'b0) & (ap_enable_reg_pp0_iter102 == 1'b0) & (ap_enable_reg_pp0_iter101 == 1'b0) & (ap_enable_reg_pp0_iter100 == 1'b0) & (ap_enable_reg_pp0_iter99 == 1'b0) & (ap_enable_reg_pp0_iter98 == 1'b0) & (ap_enable_reg_pp0_iter97 == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b0) & (ap_enable_reg_pp0_iter95 == 1'b0) & (ap_enable_reg_pp0_iter94 == 1'b0) & (ap_enable_reg_pp0_iter93 == 1'b0) & (ap_enable_reg_pp0_iter92 == 1'b0) & (ap_enable_reg_pp0_iter91 == 1'b0) & (ap_enable_reg_pp0_iter90 == 1'b0) & (ap_enable_reg_pp0_iter89 == 1'b0) & (ap_enable_reg_pp0_iter88 == 1'b0) & (ap_enable_reg_pp0_iter87 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_181_p0 = zext_ln28_fu_222_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_181_p0 = fft_size_cast_fu_184_p1;
    end else begin
        grp_fu_181_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twiddle_im_V_ce0 = 1'b1;
    end else begin
        twiddle_im_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twiddle_im_V_we0 = 1'b1;
    end else begin
        twiddle_im_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twiddle_re_V_ce0 = 1'b1;
    end else begin
        twiddle_re_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter108 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twiddle_re_V_we0 = 1'b1;
    end else begin
        twiddle_re_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_207_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter108 == 1'b1) & (ap_enable_reg_pp0_iter107 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter108 == 1'b1) & (ap_enable_reg_pp0_iter107 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_207_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_425_p2 = (12'd1075 - zext_ln501_1_fu_385_p1);

assign F2_fu_318_p2 = (12'd1075 - zext_ln501_fu_278_p1);

assign add_ln27_fu_212_p2 = (i_fu_92 + 10'd1);

assign add_ln616_1_fu_437_p2 = ($signed(F2_1_fu_425_p2) + $signed(12'd4074));

assign add_ln616_fu_330_p2 = ($signed(F2_fu_318_p2) + $signed(12'd4074));

assign and_ln616_1_fu_586_p2 = (xor_ln617_1_fu_580_p2 & icmp_ln616_1_reg_814);

assign and_ln616_fu_524_p2 = (xor_ln617_fu_518_p2 & icmp_ln616_reg_773);

assign and_ln617_1_fu_564_p2 = (xor_ln606_1_fu_559_p2 & icmp_ln617_1_reg_826);

assign and_ln617_fu_502_p2 = (xor_ln606_fu_497_p2 & icmp_ln617_reg_785);

assign angle_1_fu_246_p0 = inverse;

assign angle_1_fu_246_p3 = ((angle_1_fu_246_p0[0:0] == 1'b1) ? grp_fu_177_p2 : bitcast_ln29_1_fu_242_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage0_iter93 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage0_iter94 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter95 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage0_iter96 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage0_iter97 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage0_iter98 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage0_iter99 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage0_iter100 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage0_iter101 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage0_iter102 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage0_iter103 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage0_iter104 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage0_iter105 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage0_iter106 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage0_iter107 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage0_iter108 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter78 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter79 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter80 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter81 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter82 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter83 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter84 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter85 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage0_iter86 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage0_iter87 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage0_iter88 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage0_iter89 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter90 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage0_iter91 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage0_iter92 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ashr_ln621_1_fu_641_p2 = $signed(man_V_5_reg_802_pp0_iter106_reg) >>> zext_ln621_1_fu_638_p1;

assign ashr_ln621_fu_594_p2 = $signed(man_V_2_reg_761_pp0_iter106_reg) >>> zext_ln621_fu_591_p1;

assign bitcast_ln29_1_fu_242_p1 = xor_ln29_fu_236_p2;

assign bitcast_ln29_fu_232_p1 = grp_fu_177_p2;

assign exp_tmp_1_fu_375_p4 = {{ireg_1_fu_360_p1[62:52]}};

assign exp_tmp_fu_268_p4 = {{ireg_fu_253_p1[62:52]}};

assign fft_size_cast_fu_184_p1 = fft_size;

assign grp_sin_or_cos_double_s_fu_134_ap_start = grp_sin_or_cos_double_s_fu_134_ap_start_reg;

assign grp_sin_or_cos_double_s_fu_153_ap_start = grp_sin_or_cos_double_s_fu_153_ap_start_reg;

assign i_cast_fu_685_p1 = i_1_reg_717_pp0_iter107_reg;

assign icmp_ln27_fu_207_p2 = ((i_fu_92 == p_lshr_f_cast_reg_702) ? 1'b1 : 1'b0);

assign icmp_ln606_1_fu_419_p2 = ((trunc_ln590_1_fu_363_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln606_fu_312_p2 = ((trunc_ln590_fu_256_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_1_fu_431_p2 = (($signed(F2_1_fu_425_p2) > $signed(12'd22)) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_324_p2 = (($signed(F2_fu_318_p2) > $signed(12'd22)) ? 1'b1 : 1'b0);

assign icmp_ln617_1_fu_457_p2 = ((F2_1_fu_425_p2 == 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_350_p2 = ((F2_fu_318_p2 == 12'd22) ? 1'b1 : 1'b0);

assign icmp_ln620_1_fu_532_p2 = ((sh_amt_1_reg_819 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_470_p2 = ((sh_amt_reg_778 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln638_1_fu_537_p2 = ((sh_amt_1_reg_819 < 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_475_p2 = ((sh_amt_reg_778 < 12'd24) ? 1'b1 : 1'b0);

assign ireg_1_fu_360_p1 = LD_1_reg_751;

assign ireg_fu_253_p1 = LD_reg_746;

assign man_V_1_fu_298_p2 = (54'd0 - zext_ln604_fu_294_p1);

assign man_V_2_fu_304_p3 = ((p_Result_s_fu_260_p3[0:0] == 1'b1) ? man_V_1_fu_298_p2 : zext_ln604_fu_294_p1);

assign man_V_4_fu_405_p2 = (54'd0 - zext_ln604_1_fu_401_p1);

assign man_V_5_fu_411_p3 = ((p_Result_20_fu_367_p3[0:0] == 1'b1) ? man_V_4_fu_405_p2 : zext_ln604_1_fu_401_p1);

assign or_ln617_1_fu_576_p2 = (icmp_ln617_1_reg_826 | icmp_ln606_1_reg_807);

assign or_ln617_fu_514_p2 = (icmp_ln617_reg_785 | icmp_ln606_reg_766);

assign p_Result_19_fu_286_p3 = {{1'd1}, {trunc_ln600_fu_282_p1}};

assign p_Result_20_fu_367_p3 = ireg_1_fu_360_p1[32'd63];

assign p_Result_21_fu_393_p3 = {{1'd1}, {trunc_ln600_1_fu_389_p1}};

assign p_Result_s_fu_260_p3 = ireg_fu_253_p1[32'd63];

assign select_ln606_1_fu_678_p3 = ((icmp_ln606_1_reg_807_pp0_iter106_reg[0:0] == 1'b1) ? 24'd0 : select_ln616_2_fu_672_p3);

assign select_ln606_fu_631_p3 = ((icmp_ln606_reg_766_pp0_iter106_reg[0:0] == 1'b1) ? 24'd0 : select_ln616_fu_625_p3);

assign select_ln616_2_fu_672_p3 = ((and_ln616_1_reg_873[0:0] == 1'b1) ? select_ln620_1_fu_665_p3 : select_ln617_1_reg_868);

assign select_ln616_fu_625_p3 = ((and_ln616_reg_853[0:0] == 1'b1) ? select_ln620_fu_618_p3 : select_ln617_reg_848);

assign select_ln617_1_fu_569_p3 = ((and_ln617_1_fu_564_p2[0:0] == 1'b1) ? trunc_ln618_1_reg_832 : select_ln638_1_fu_551_p3);

assign select_ln617_fu_507_p3 = ((and_ln617_fu_502_p2[0:0] == 1'b1) ? trunc_ln618_reg_791 : select_ln638_fu_489_p3);

assign select_ln620_1_fu_665_p3 = ((icmp_ln620_1_reg_863[0:0] == 1'b1) ? trunc_ln621_1_fu_646_p1 : select_ln623_1_fu_657_p3);

assign select_ln620_fu_618_p3 = ((icmp_ln620_reg_843[0:0] == 1'b1) ? trunc_ln621_fu_599_p1 : select_ln623_fu_610_p3);

assign select_ln623_1_fu_657_p3 = ((tmp_18_fu_650_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln623_fu_610_p3 = ((tmp_fu_603_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln638_1_fu_551_p3 = ((icmp_ln638_1_fu_537_p2[0:0] == 1'b1) ? shl_ln639_1_fu_546_p2 : 24'd0);

assign select_ln638_fu_489_p3 = ((icmp_ln638_fu_475_p2[0:0] == 1'b1) ? shl_ln639_fu_484_p2 : 24'd0);

assign sext_ln616_1_fu_529_p1 = sh_amt_1_reg_819;

assign sext_ln616_1cast_fu_542_p1 = sext_ln616_1_fu_529_p1[23:0];

assign sext_ln616_fu_467_p1 = sh_amt_reg_778;

assign sext_ln616cast_fu_480_p1 = sext_ln616_fu_467_p1[23:0];

assign sh_amt_1_fu_449_p3 = ((icmp_ln616_1_fu_431_p2[0:0] == 1'b1) ? add_ln616_1_fu_437_p2 : sub_ln616_1_fu_443_p2);

assign sh_amt_fu_342_p3 = ((icmp_ln616_fu_324_p2[0:0] == 1'b1) ? add_ln616_fu_330_p2 : sub_ln616_fu_336_p2);

assign shl_ln639_1_fu_546_p2 = trunc_ln618_1_reg_832 << sext_ln616_1cast_fu_542_p1;

assign shl_ln639_fu_484_p2 = trunc_ln618_reg_791 << sext_ln616cast_fu_480_p1;

assign sub_ln616_1_fu_443_p2 = (12'd22 - F2_1_fu_425_p2);

assign sub_ln616_fu_336_p2 = (12'd22 - F2_fu_318_p2);

assign tmp_18_fu_650_p3 = ireg_1_reg_797_pp0_iter106_reg[32'd63];

assign tmp_fu_603_p3 = ireg_reg_756_pp0_iter106_reg[32'd63];

assign trunc_ln28_fu_218_p1 = i_fu_92[8:0];

assign trunc_ln590_1_fu_363_p1 = ireg_1_fu_360_p1[62:0];

assign trunc_ln590_fu_256_p1 = ireg_fu_253_p1[62:0];

assign trunc_ln600_1_fu_389_p1 = ireg_1_fu_360_p1[51:0];

assign trunc_ln600_fu_282_p1 = ireg_fu_253_p1[51:0];

assign trunc_ln618_1_fu_463_p1 = man_V_5_fu_411_p3[23:0];

assign trunc_ln618_fu_356_p1 = man_V_2_fu_304_p3[23:0];

assign trunc_ln621_1_fu_646_p1 = ashr_ln621_1_fu_641_p2[23:0];

assign trunc_ln621_fu_599_p1 = ashr_ln621_fu_594_p2[23:0];

assign twiddle_im_V_address0 = i_cast_fu_685_p1;

assign twiddle_im_V_d0 = select_ln606_1_reg_883;

assign twiddle_re_V_address0 = i_cast_fu_685_p1;

assign twiddle_re_V_d0 = select_ln606_reg_878;

assign xor_ln29_fu_236_p2 = (bitcast_ln29_fu_232_p1 ^ 64'd9223372036854775808);

assign xor_ln606_1_fu_559_p2 = (icmp_ln606_1_reg_807 ^ 1'd1);

assign xor_ln606_fu_497_p2 = (icmp_ln606_reg_766 ^ 1'd1);

assign xor_ln617_1_fu_580_p2 = (or_ln617_1_fu_576_p2 ^ 1'd1);

assign xor_ln617_fu_518_p2 = (or_ln617_fu_514_p2 ^ 1'd1);

assign zext_ln28_fu_222_p1 = trunc_ln28_fu_218_p1;

assign zext_ln501_1_fu_385_p1 = exp_tmp_1_fu_375_p4;

assign zext_ln501_fu_278_p1 = exp_tmp_fu_268_p4;

assign zext_ln604_1_fu_401_p1 = p_Result_21_fu_393_p3;

assign zext_ln604_fu_294_p1 = p_Result_19_fu_286_p3;

assign zext_ln621_1_fu_638_p1 = $unsigned(sext_ln616_1_reg_858);

assign zext_ln621_fu_591_p1 = $unsigned(sext_ln616_reg_838);

endmodule //EQ_init_twiddle
